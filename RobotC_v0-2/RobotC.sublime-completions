{
	"scope": "source.c",

	"completions":
	[
		{"trigger": "alive      BATTERY&POWERCONTROL NT","contents": "alive()" },
		{"trigger": "powerOff      BATTERY&POWERCONTROL NT","contents": "powerOff()" },
		{"trigger": "setPowerDownDelay   minutes   BATTERY&POWERCONTROL NT","contents": "setPowerDownDelay(${1:minutes})" },
		{"trigger": "bNoPowerDownOnACAdaptor       BATTERY&POWERCONTROL NT","contents": "bNoPowerDownOnACAdaptor " },
		{"trigger": "bNxtRechargable       BATTERY&POWERCONTROL NT","contents": "bNxtRechargable " },
		{"trigger": "externalBattery       BATTERY&POWERCONTROL NT","contents": "externalBattery " },
		{"trigger": "externalBatteryAvg       BATTERY&POWERCONTROL NT","contents": "externalBatteryAvg " },
		{"trigger": "LowVoltageBatteryCountLimits       BATTERY&POWERCONTROL NT","contents": "LowVoltageBatteryCountLimits " },
		{"trigger": "nAvgBatteryLevel       BATTERY&POWERCONTROL NTAR","contents": "nAvgBatteryLevel " },
		{"trigger": "nBackupBatteryLevel       BATTERY&POWERCONTROL ","contents": "nBackupBatteryLevel " },
		{"trigger": "nBatteryLevel       BATTERY&POWERCONTROL ","contents": "nBatteryLevel " },
		{"trigger": "nImmediateBatteryLevel       BATTERY&POWERCONTROL NTAR","contents": "nImmediateBatteryLevel " },
		{"trigger": "nPowerDownDelayMinutes       BATTERY&POWERCONTROL NT","contents": "nPowerDownDelayMinutes " },
		{"trigger": "nPowerDownDelayMinutesDefault       BATTERY&POWERCONTROL NT","contents": "nPowerDownDelayMinutesDefault " },
		{"trigger": "nShutdownVoltage       BATTERY&POWERCONTROL R","contents": "nShutdownVoltage " },
		{"trigger": "nAvgBatteryLevel       BATTERY&POWERCONTROL V2","contents": "nAvgBatteryLevel " },
		{"trigger": "BackupBatteryLevel       BATTERY&POWERCONTROL V2","contents": "BackupBatteryLevel " },
		{"trigger": "nImmediateBatteryLevel       BATTERY&POWERCONTROL V2","contents": "nImmediateBatteryLevel " },
		{"trigger": "btConnect   nPort,sFriendlyName   BLUETOOTH NT","contents": "btConnect(${1:nPort},${2:sFriendlyName})" },
		{"trigger": "btDisconnect   nPort   BLUETOOTH NT","contents": "btDisconnect(${1:nPort})" },
		{"trigger": "btDisconnectAll      BLUETOOTH NT","contents": "btDisconnectAll()" },
		{"trigger": "btFactoryReset      BLUETOOTH NT","contents": "btFactoryReset()" },
		{"trigger": "btGetMyContactsEntry   nIndexInList,nInfo   BLUETOOTH NT","contents": "btGetMyContactsEntry(${1:nIndexInList},${2:nInfo})" },
		{"trigger": "BTOpcdFcn   function   BLUETOOTH ","contents": "BTOpcdFcn(${1:function})" },
		{"trigger": "btRemoveDevice   sFriendlyName   BLUETOOTH NT","contents": "btRemoveDevice(${1:sFriendlyName})" },
		{"trigger": "btRequestLinkQuality   nPort   BLUETOOTH NT","contents": "btRequestLinkQuality(${1:nPort})" },
		{"trigger": "btSearch      BLUETOOTH NT","contents": "btSearch()" },
		{"trigger": "btSendMessage   nPort,nXmitLength,nXmitBuffer,bWaitForReply   BLUETOOTH NT","contents": "btSendMessage(${1:nPort},${2:nXmitLength},${3:nXmitBuffer},${4:bWaitForReply})" },
		{"trigger": "btStopSearch      BLUETOOTH NT","contents": "btStopSearch()" },
		{"trigger": "cCmdBTCheckStatus   nStream   BLUETOOTH NT","contents": "cCmdBTCheckStatus(${1:nStream})" },
		{"trigger": "cCmdBTPurgeRcvBuffer      BLUETOOTH NT","contents": "cCmdBTPurgeRcvBuffer()" },
		{"trigger": "cCmdMessageAddToQueue   nQueueID,pData,nLength   BLUETOOTH NT","contents": "cCmdMessageAddToQueue(${1:nQueueID},${2:pData},${3:nLength})" },
		{"trigger": "cCmdMessageGetSize   nQueueID   BLUETOOTH NT","contents": "cCmdMessageGetSize(${1:nQueueID})" },
		{"trigger": "cCmdMessageRead   pData,nLengthToRead,nQueueID   BLUETOOTH NT","contents": "cCmdMessageRead(${1:pData},${2:nLengthToRead},${3:nQueueID})" },
		{"trigger": "cCmdMessageWriteToBluetooth   nStream,pData,nLength,nQueueID   BLUETOOTH NT","contents": "cCmdMessageWriteToBluetooth(${1:nStream},${2:pData},${3:nLength},${4:nQueueID})" },
		{"trigger": "cCmdMessageWriteToBluetooth   pData,nLength,nQueueID   BLUETOOTH NT","contents": "cCmdMessageWriteToBluetooth(${1:pData},${2:nLength},${3:nQueueID})" },
		{"trigger": "cCmdRawSendToBluetooth   nStream,pData,nLength   BLUETOOTH NT","contents": "cCmdRawSendToBluetooth(${1:nStream},${2:pData},${3:nLength})" },
		{"trigger": "cCmdRawSendToBluetooth   pData,nLength   BLUETOOTH NT","contents": "cCmdRawSendToBluetooth(${1:pData},${2:nLength})" },
		{"trigger": "getBTAddress   btAddr   BLUETOOTH NT","contents": "getBTAddress(${1:btAddr})" },
		{"trigger": "getDefaultPIN   passCode   BLUETOOTH NT","contents": "getDefaultPIN(${1:passCode})" },
		{"trigger": "getDeviceAddr   nResult,nHandle,sAddr   BLUETOOTH NT","contents": "getDeviceAddr(${1:nResult},${2:nHandle},${3:sAddr})" },
		{"trigger": "getDeviceClass   nHandle,sCOD   BLUETOOTH NT","contents": "getDeviceClass(${1:nHandle},${2:sCOD})" },
		{"trigger": "getDeviceName   nHandle,sName   BLUETOOTH NT","contents": "getDeviceName(${1:nHandle},${2:sName})" },
		{"trigger": "getDeviceStatus   nHandle,nStatus   BLUETOOTH NT","contents": "getDeviceStatus(${1:nHandle},${2:nStatus})" },
		{"trigger": "getFirstDevice   nResult,nHandle   BLUETOOTH NT","contents": "getFirstDevice(${1:nResult},${2:nHandle})" },
		{"trigger": "getFriendlyName   sName   BLUETOOTH NT","contents": "getFriendlyName(${1:sName})" },
		{"trigger": "getNextDevice   nResult,nHandle   BLUETOOTH NT","contents": "getNextDevice(${1:nResult},${2:nHandle})" },
		{"trigger": "getPortName   nResult,nPort,sPortName   BLUETOOTH NT","contents": "getPortName(${1:nResult},${2:nPort},${3:sPortName})" },
		{"trigger": "getSessionPIN   passCode   BLUETOOTH NT","contents": "getSessionPIN(${1:passCode})" },
		{"trigger": "nxtReadRawBluetooth   pData,nMaxBufferSize   BLUETOOTH NT","contents": "nxtReadRawBluetooth(${1:pData},${2:nMaxBufferSize})" },
		{"trigger": "nxtWriteRawBluetooth   nStream,pData,nLength   BLUETOOTH NT","contents": "nxtWriteRawBluetooth(${1:nStream},${2:pData},${3:nLength})" },
		{"trigger": "nxtWriteRawBluetooth   pData,nLength   BLUETOOTH NT","contents": "nxtWriteRawBluetooth(${1:pData},${2:nLength})" },
		{"trigger": "resetSessionPIN      BLUETOOTH NT","contents": "resetSessionPIN()" },
		{"trigger": "sendMessageNew   nMessageID   BLUETOOTH NT","contents": "sendMessageNew(${1:nMessageID})" },
		{"trigger": "sendMessageOld   nMessageID   BLUETOOTH NT","contents": "sendMessageOld(${1:nMessageID})" },
		{"trigger": "setBluetoothOff      BLUETOOTH NT","contents": "setBluetoothOff()" },
		{"trigger": "setBluetoothOn      BLUETOOTH NT","contents": "setBluetoothOn()" },
		{"trigger": "setBluetoothRawDataMode      BLUETOOTH NT","contents": "setBluetoothRawDataMode()" },
		{"trigger": "setBluetoothVisibility   bBluetoothVisible   BLUETOOTH NT","contents": "setBluetoothVisibility(${1:bBluetoothVisible})" },
		{"trigger": "setBluetoothVisibility   nResult,bBluetoothVisible   BLUETOOTH NT","contents": "setBluetoothVisibility(${1:nResult},${2:bBluetoothVisible})" },
		{"trigger": "setDefaultPIN   nResult,sPIN   BLUETOOTH NT","contents": "setDefaultPIN(${1:nResult},${2:sPIN})" },
		{"trigger": "setDefaultPIN   passCode   BLUETOOTH NT","contents": "setDefaultPIN(${1:passCode})" },
		{"trigger": "setFriendlyName   nResult,sFriendlyName   BLUETOOTH NT","contents": "setFriendlyName(${1:nResult},${2:sFriendlyName})" },
		{"trigger": "setFriendlyName   sFriendlyName   BLUETOOTH NT","contents": "setFriendlyName(${1:sFriendlyName})" },
		{"trigger": "setSessionPIN   passCode   BLUETOOTH NT","contents": "setSessionPIN(${1:passCode})" },
		{"trigger": "transferFile   nPort,sFileName   BLUETOOTH NT","contents": "transferFile(${1:nPort},${2:sFileName})" },
		{"trigger": "bBTBusy       BLUETOOTH NT","contents": "bBTBusy " },
		{"trigger": "bBTDebugTrace       BLUETOOTH NT","contents": "bBTDebugTrace " },
		{"trigger": "bBTHasProgressSounds       BLUETOOTH NT","contents": "bBTHasProgressSounds " },
		{"trigger": "bBTOptimizePerformance       BLUETOOTH NT","contents": "bBTOptimizePerformance " },
		{"trigger": "bBTRawMode       BLUETOOTH NT","contents": "bBTRawMode " },
		{"trigger": "bBTSkipPswdPrompt       BLUETOOTH NT","contents": "bBTSkipPswdPrompt " },
		{"trigger": "bBTVisble       BLUETOOTH NT","contents": "bBTVisble " },
		{"trigger": "kDefaultBTQueue       BLUETOOTH NT","contents": "kDefaultBTQueue " },
		{"trigger": "kMaxMyContacts       BLUETOOTH NT","contents": "kMaxMyContacts " },
		{"trigger": "nBluetoothCmdStatus       BLUETOOTH NT","contents": "nBluetoothCmdStatus " },
		{"trigger": "nBluetoothState       BLUETOOTH NT","contents": "nBluetoothState " },
		{"trigger": "nBTAvailOutSize       BLUETOOTH NT","contents": "nBTAvailOutSize " },
		{"trigger": "nBTCurrentStreamIndex       BLUETOOTH NT","contents": "nBTCurrentStreamIndex " },
		{"trigger": "nBTLinkQuality[]       BLUETOOTH NT","contents": "nBTLinkQuality[] " },
		{"trigger": "nBTStreamSwitchDelay       BLUETOOTH NT","contents": "nBTStreamSwitchDelay " },
		{"trigger": "nLastBTCommand       BLUETOOTH NT","contents": "nLastBTCommand " },
		{"trigger": "kNoButton       BUTTONS NT","contents": "kNoButton " },
		{"trigger": "nNxtButtonPressed       BUTTONS NT","contents": "nNxtButtonPressed " },
		{"trigger": "nNxtButtonTask       BUTTONS NT","contents": "nNxtButtonTask " },
		{"trigger": "nNxtButtonTransition       BUTTONS NT","contents": "nNxtButtonTransition " },
		{"trigger": "nNxtExitClicks       BUTTONS NT","contents": "nNxtExitClicks " },
		{"trigger": "nNxtRemoteButton       BUTTONS NT","contents": "nNxtRemoteButton " },
		{"trigger": "nOffButtonTask       BUTTONS R","contents": "nOffButtonTask " },
		{"trigger": "nRunButtonTask       BUTTONS R","contents": "nRunButtonTask " },
		{"trigger": "GetCameraConfig   config   CAMERA NTV1","contents": "GetCameraConfig(${1:config})" },
		{"trigger": "GetTrackingParms   myData   CAMERA NTV1","contents": "GetTrackingParms(${1:myData})" },
		{"trigger": "ResetCameraConfigurationToDefault      CAMERA NTV1","contents": "ResetCameraConfigurationToDefault()" },
		{"trigger": "SetCameraConfig   config   CAMERA NTV1","contents": "SetCameraConfig(${1:config})" },
		{"trigger": "SetTrackingParms   config   CAMERA NTV1","contents": "SetTrackingParms(${1:config})" },
		{"trigger": "StartCamera      CAMERA NTV1","contents": "StartCamera()" },
		{"trigger": "StopCamera      CAMERA NTV1","contents": "StopCamera()" },
		{"trigger": "bStreamCameraIOToPC       CAMERA NTV1","contents": "bStreamCameraIOToPC " },
		{"trigger": "nCameraConfidence       CAMERA NTV1","contents": "nCameraConfidence " },
		{"trigger": "nCameraHorizontal       CAMERA NTV1","contents": "nCameraHorizontal " },
		{"trigger": "nCameraStatus       CAMERA NTV1","contents": "nCameraStatus " },
		{"trigger": "nCameraTrackingPackets       CAMERA NTV1","contents": "nCameraTrackingPackets " },
		{"trigger": "nCameraVertical       CAMERA NTV1","contents": "nCameraVertical " },
		{"trigger": "trackingData       CAMERA NTV1","contents": "trackingData " },
		{"trigger": "AddToDatalog   data   DATALOG NT","contents": "AddToDatalog(${1:data})" },
		{"trigger": "AddToDatalog   nDataPtIndex,nDataValue   DATALOG NT","contents": "AddToDatalog(${1:nDataPtIndex},${2:nDataValue})" },
		{"trigger": "AddToDatalogEnhanced   nFlags,data   DATALOG NT","contents": "AddToDatalogEnhanced(${1:nFlags},${2:data})" },
		{"trigger": "CreateDatalog   size   DATALOG NT","contents": "CreateDatalog(${1:size})" },
		{"trigger": "SaveNxtDatalog      DATALOG NT","contents": "SaveNxtDatalog()" },
		{"trigger": "UploadDatalog   nStart,nSize   DATALOG NT","contents": "UploadDatalog(${1:nStart},${2:nSize})" },
		{"trigger": "ddToDatalog   nDataPtIndex,data   DATALOG NT","contents": "ddToDatalog(${1:nDataPtIndex},${2:data})" },
		{"trigger": "bHideDataFiles       DATALOG NT","contents": "bHideDataFiles " },
		{"trigger": "nDatalogSize       DATALOG NT","contents": "nDatalogSize " },
		{"trigger": "nMaxDataFiles       DATALOG NT","contents": "nMaxDataFiles " },
		{"trigger": "nMaxDataFileSize       DATALOG NT","contents": "nMaxDataFileSize " },
		{"trigger": "nUsedDatalogBytes       DATALOG NT","contents": "nUsedDatalogBytes " },
		{"trigger": "ArrayBoundCheck   nRunTimeValue,nRange   DEBUG ALL","contents": "ArrayBoundCheck(${1:nRunTimeValue},${2:nRange})" },
		{"trigger": "assert      DEBUG ALL","contents": "assert()" },
		{"trigger": "ASSERT   assertVar   DEBUG ALL","contents": "ASSERT(${1:assertVar})" },
		{"trigger": "debugPrint   format,parm1,parm2   DEBUG NTV2A","contents": "debugPrint(${1:format},${2:parm1},${3:parm2})" },
		{"trigger": "debugPrintLine   format,parm1,parm2   DEBUG NTV2A","contents": "debugPrintLine(${1:format},${2:parm1},${3:parm2})" },
		{"trigger": "getAvailSpaceInDebugStream      DEBUG NTV2A","contents": "getAvailSpaceInDebugStream()" },
		{"trigger": "Set   nDestinationVariable,nSourceVariable   DEBUG ALL","contents": "Set(${1:nDestinationVariable},${2:nSourceVariable})" },
		{"trigger": "setBreakpoint   breakNumb,memoryIndex,nOffsetInSub   DEBUG ALL","contents": "setBreakpoint(${1:breakNumb},${2:memoryIndex},${3:nOffsetInSub})" },
		{"trigger": "VERIFY   assertVar   DEBUG ALL","contents": "VERIFY(${1:assertVar})" },
		{"trigger": "writeDebugStream   sFormatString   DEBUG NTV2A","contents": "writeDebugStream(${1:sFormatString})" },
		{"trigger": "writeDebugStream   sFormatString,...   DEBUG NTV2A","contents": "writeDebugStream(${1:sFormatString},${2:...})" },
		{"trigger": "writeDebugStream   pzFormatString,...   DEBUG NTV2A","contents": "writeDebugStream(${1:pzFormatString},${2:...})" },
		{"trigger": "writeDebugStreamLine   sFormatString   DEBUG NTV2A","contents": "writeDebugStreamLine(${1:sFormatString})" },
		{"trigger": "writeDebugStreamLine   sFormatString,...   DEBUG NTV2A","contents": "writeDebugStreamLine(${1:sFormatString},${2:...})" },
		{"trigger": "writeDebugStreamLine   pzFormatString,...   DEBUG NTV2A","contents": "writeDebugStreamLine(${1:pzFormatString},${2:...})" },
		{"trigger": "clearDebugStream      DEBUG NTV2A","contents": "clearDebugStream()" },
		{"trigger": "bFloatConversionErrors       DEBUG ALL","contents": "bFloatConversionErrors " },
		{"trigger": "nDebugTaskMode       DEBUG ALL","contents": "nDebugTaskMode " },
		{"trigger": "clearLCDLine   nLine   DISPLAY V1V2","contents": "clearLCDLine(${1:nLine})" },
		{"trigger": "displayFileName   nLine,nSlot   DISPLAY V1V2","contents": "displayFileName(${1:nLine},${2:nSlot})" },
		{"trigger": "displayLCDCenteredString   nLine,sString   DISPLAY V1V2","contents": "displayLCDCenteredString(${1:nLine},${2:sString})" },
		{"trigger": "displayLCDCenteredString   nLine,pzString   DISPLAY V1V2","contents": "displayLCDCenteredString(${1:nLine},${2:pzString})" },
		{"trigger": "displayLCDChar   nLine,nPos,cChar   DISPLAY V1V2","contents": "displayLCDChar(${1:nLine},${2:nPos},${3:cChar})" },
		{"trigger": "displayLCDNumber   nLine,nPos,nValue,nPrecision   DISPLAY V1V2","contents": "displayLCDNumber(${1:nLine},${2:nPos},${3:nValue},${4:nPrecision})" },
		{"trigger": "setLCDPosition   nLine,nPos   DISPLAY V1V2","contents": "setLCDPosition(${1:nLine},${2:nPos})" },
		{"trigger": "displayLCDPos   nLine,nPos   DISPLAY V1V2","contents": "displayLCDPos(${1:nLine},${2:nPos})" },
		{"trigger": "displayLCDString   nLine,nPos,sString   DISPLAY V1V2","contents": "displayLCDString(${1:nLine},${2:nPos},${3:sString})" },
		{"trigger": "displayLCDString   nLine,nPos,pzString   DISPLAY V1V2","contents": "displayLCDString(${1:nLine},${2:nPos},${3:pzString})" },
		{"trigger": "displayNextLCDChar   cChar   DISPLAY V1V2","contents": "displayNextLCDChar(${1:cChar})" },
		{"trigger": "displayNextLCDNumber   nValue,nPrecision   DISPLAY V1V2","contents": "displayNextLCDNumber(${1:nValue},${2:nPrecision})" },
		{"trigger": "displayNextLCDString   sString   DISPLAY V1V2","contents": "displayNextLCDString(${1:sString})" },
		{"trigger": "displayNextLCDString   pzString   DISPLAY V1V2","contents": "displayNextLCDString(${1:pzString})" },
		{"trigger": "drawInvertEllipse   Left,Top,Right,Bottom   DISPLAY AR","contents": "drawInvertEllipse(${1:Left},${2:Top},${3:Right},${4:Bottom})" },
		{"trigger": "drawInvertRect   Left,Top,Right,Bottom   DISPLAY AR","contents": "drawInvertRect(${1:Left},${2:Top},${3:Right},${4:Bottom})" },
		{"trigger": "eraseDisplay      DISPLAY NTA","contents": "eraseDisplay()" },
		{"trigger": "nxtClearPixel   xPos,yPos   DISPLAY NTA","contents": "nxtClearPixel(${1:xPos},${2:yPos})" },
		{"trigger": "nxtDisplayBigStringAt   xPos,yPos,pChar,...   DISPLAY NTA","contents": "nxtDisplayBigStringAt(${1:xPos},${2:yPos},${3:pChar},${4:...})" },
		{"trigger": "nxtDisplayBigStringAt   xPos,yPos,sFormatString,...   DISPLAY NTA","contents": "nxtDisplayBigStringAt(${1:xPos},${2:yPos},${3:sFormatString},${4:...})" },
		{"trigger": "nxtDisplayBigStringAt   xPos,yPos,sString   DISPLAY NTA","contents": "nxtDisplayBigStringAt(${1:xPos},${2:yPos},${3:sString})" },
		{"trigger": "nxtDisplayBigTextLine   nLineNumber,pChar,...   DISPLAY NTA","contents": "nxtDisplayBigTextLine(${1:nLineNumber},${2:pChar},${3:...})" },
		{"trigger": "nxtDisplayBigTextLine   nLineNumber,sFormatString,...   DISPLAY NTA","contents": "nxtDisplayBigTextLine(${1:nLineNumber},${2:sFormatString},${3:...})" },
		{"trigger": "nxtDisplayBigTextLine   nLineNumber,sString   DISPLAY NTA","contents": "nxtDisplayBigTextLine(${1:nLineNumber},${2:sString})" },
		{"trigger": "nxtDisplayCenteredBigTextLine   nLineNumber,pChar,...   DISPLAY NTA","contents": "nxtDisplayCenteredBigTextLine(${1:nLineNumber},${2:pChar},${3:...})" },
		{"trigger": "nxtDisplayCenteredBigTextLine   nLineNumber,sFormatString,...   DISPLAY NTA","contents": "nxtDisplayCenteredBigTextLine(${1:nLineNumber},${2:sFormatString},${3:...})" },
		{"trigger": "nxtDisplayCenteredBigTextLine   nLineNumber,sString   DISPLAY NTA","contents": "nxtDisplayCenteredBigTextLine(${1:nLineNumber},${2:sString})" },
		{"trigger": "nxtDisplayCenteredTextLine   nLineNumber,pChar,...   DISPLAY NTA","contents": "nxtDisplayCenteredTextLine(${1:nLineNumber},${2:pChar},${3:...})" },
		{"trigger": "nxtDisplayCenteredTextLine   nLineNumber,sFormatString,...   DISPLAY NTA","contents": "nxtDisplayCenteredTextLine(${1:nLineNumber},${2:sFormatString},${3:...})" },
		{"trigger": "nxtDisplayCenteredTextLine   nLineNumber,sString   DISPLAY NTA","contents": "nxtDisplayCenteredTextLine(${1:nLineNumber},${2:sString})" },
		{"trigger": "nxtDisplayClearTextLine   nLineNumber   DISPLAY NTA","contents": "nxtDisplayClearTextLine(${1:nLineNumber})" },
		{"trigger": "nxtDisplayIconFile   xPos,yPos,sFileName   DISPLAY NTA","contents": "nxtDisplayIconFile(${1:xPos},${2:yPos},${3:sFileName})" },
		{"trigger": "nxtDisplayRICFile   nleft,nBottom,sFileName   DISPLAY NTA","contents": "nxtDisplayRICFile(${1:nleft},${2:nBottom},${3:sFileName})" },
		{"trigger": "nxtDisplayString   nLineNumber,pChar,...   DISPLAY NTA","contents": "nxtDisplayString(${1:nLineNumber},${2:pChar},${3:...})" },
		{"trigger": "nxtDisplayString   nLineNumber,sFormatString,...   DISPLAY NTA","contents": "nxtDisplayString(${1:nLineNumber},${2:sFormatString},${3:...})" },
		{"trigger": "nxtDisplayStringAt   xPos,yPos,pChar,...   DISPLAY NTA","contents": "nxtDisplayStringAt(${1:xPos},${2:yPos},${3:pChar},${4:...})" },
		{"trigger": "nxtDisplayStringAt   xPos,yPos,sFormatString,...   DISPLAY NTA","contents": "nxtDisplayStringAt(${1:xPos},${2:yPos},${3:sFormatString},${4:...})" },
		{"trigger": "nxtDisplayStringAt   xPos,yPos,sString   DISPLAY NTA","contents": "nxtDisplayStringAt(${1:xPos},${2:yPos},${3:sString})" },
		{"trigger": "nxtDisplayTextLine   nLineNumber,pChar,...   DISPLAY NTA","contents": "nxtDisplayTextLine(${1:nLineNumber},${2:pChar},${3:...})" },
		{"trigger": "nxtDisplayTextLine   nLineNumber,sFormatString,...   DISPLAY NTA","contents": "nxtDisplayTextLine(${1:nLineNumber},${2:sFormatString},${3:...})" },
		{"trigger": "nxtDisplayTextLine   nLineNumber,sString   DISPLAY NTA","contents": "nxtDisplayTextLine(${1:nLineNumber},${2:sString})" },
		{"trigger": "nxtDrawCircle   Left,Top,Diameter   DISPLAY NTA","contents": "nxtDrawCircle(${1:Left},${2:Top},${3:Diameter})" },
		{"trigger": "nxtDrawEllipse   Left,Top,Right,Bottom   DISPLAY NTA","contents": "nxtDrawEllipse(${1:Left},${2:Top},${3:Right},${4:Bottom})" },
		{"trigger": "nxtDrawLine   xPos,yPos,xPosTo,yPosTo   DISPLAY NTA","contents": "nxtDrawLine(${1:xPos},${2:yPos},${3:xPosTo},${4:yPosTo})" },
		{"trigger": "nxtDrawRect   Left,Top,Right,Bottom   DISPLAY NTA","contents": "nxtDrawRect(${1:Left},${2:Top},${3:Right},${4:Bottom})" },
		{"trigger": "nxtDsplyClearPixel       DISPLAY NTA","contents": "nxtDsplyClearPixel " },
		{"trigger": "nxtDsplyDrawEllipse       DISPLAY NTA","contents": "nxtDsplyDrawEllipse " },
		{"trigger": "nxtDsplyDrawIconFile       DISPLAY NT","contents": "nxtDsplyDrawIconFile " },
		{"trigger": "nxtDsplyDrawLine       DISPLAY NTA","contents": "nxtDsplyDrawLine " },
		{"trigger": "nxtDsplyDrawRect       DISPLAY NTA","contents": "nxtDsplyDrawRect " },
		{"trigger": "nxtDsplyDrawStringAtCoordVarFmtSpec       DISPLAY NTA","contents": "nxtDsplyDrawStringAtCoordVarFmtSpec " },
		{"trigger": "nxtDsplyDrawStringVarFmtSpec       DISPLAY NTA","contents": "nxtDsplyDrawStringVarFmtSpec " },
		{"trigger": "nxtDsplyDrawTextLineVarFmtSpec       DISPLAY NTA","contents": "nxtDsplyDrawTextLineVarFmtSpec " },
		{"trigger": "nxtDsplyEraseEllipse       DISPLAY NTA","contents": "nxtDsplyEraseEllipse " },
		{"trigger": "nxtDsplyEraseRect       DISPLAY NTA","contents": "nxtDsplyEraseRect " },
		{"trigger": "nxtDsplyEraseScreen       DISPLAY NTA","contents": "nxtDsplyEraseScreen " },
		{"trigger": "nxtDsplyFillEllipse       DISPLAY NTA","contents": "nxtDsplyFillEllipse " },
		{"trigger": "nxtDsplyFillRect       DISPLAY NTA","contents": "nxtDsplyFillRect " },
		{"trigger": "nxtDsplySetPixel       DISPLAY NTA","contents": "nxtDsplySetPixel " },
		{"trigger": "nxtEraseEllipse   Left,Top,Right,Bottom   DISPLAY NTA","contents": "nxtEraseEllipse(${1:Left},${2:Top},${3:Right},${4:Bottom})" },
		{"trigger": "nxtEraseLine   xPos,yPos,xPosTo,yPosTo   DISPLAY NTA","contents": "nxtEraseLine(${1:xPos},${2:yPos},${3:xPosTo},${4:yPosTo})" },
		{"trigger": "nxtEraseRect   Left,Top,Right,Bottom   DISPLAY NTA","contents": "nxtEraseRect(${1:Left},${2:Top},${3:Right},${4:Bottom})" },
		{"trigger": "nxtFillEllipse   Left,Top,Right,Bottom   DISPLAY NTA","contents": "nxtFillEllipse(${1:Left},${2:Top},${3:Right},${4:Bottom})" },
		{"trigger": "nxtFillRect   Left,Top,Right,Bottom   DISPLAY NTA","contents": "nxtFillRect(${1:Left},${2:Top},${3:Right},${4:Bottom})" },
		{"trigger": "nxtInvertLine   xPos,yPos,xPosTo,yPosTo   DISPLAY NTA","contents": "nxtInvertLine(${1:xPos},${2:yPos},${3:xPosTo},${4:yPosTo})" },
		{"trigger": "nxtScrollText   pChar,...   DISPLAY NTA","contents": "nxtScrollText(${1:pChar},${2:...})" },
		{"trigger": "nxtScrollText   sFormatString,...   DISPLAY NTA","contents": "nxtScrollText(${1:sFormatString},${2:...})" },
		{"trigger": "nxtSetPixel   xPos,yPos   DISPLAY NTA","contents": "nxtSetPixel(${1:xPos},${2:yPos})" },
		{"trigger": "SetUserDisplay   nVariable,nPrecision   DISPLAY R","contents": "SetUserDisplay(${1:nVariable},${2:nPrecision})" },
		{"trigger": "bLCDBacklight       DISPLAY V1V2","contents": "bLCDBacklight " },
		{"trigger": "bNxtLCDStatusDisplay       DISPLAY NT","contents": "bNxtLCDStatusDisplay " },
		{"trigger": "nLCDButtons       DISPLAY V1V2A","contents": "nLCDButtons " },
		{"trigger": "nLCDContrast       DISPLAY NTA","contents": "nLCDContrast " },
		{"trigger": "nLCDContrastDefault       DISPLAY NTA","contents": "nLCDContrastDefault " },
		{"trigger": "nLCDRefreshCycles       DISPLAY AR","contents": "nLCDRefreshCycles " },
		{"trigger": "nLCDRefreshRate       DISPLAY R","contents": "nLCDRefreshRate " },
		{"trigger": "nOnBrickProgrammingStep       DISPLAY NT","contents": "nOnBrickProgrammingStep " },
		{"trigger": "nViewState       DISPLAY R","contents": "nViewState " },
		{"trigger": "nViewStateNXT       DISPLAY NT","contents": "nViewStateNXT " },
		{"trigger": "nWatchFormat       DISPLAY R","contents": "nWatchFormat " },
		{"trigger": "CalibrateEvent   nEventNumber,lowerThreshold,upperThreshold,hysteresis   EVENTS ","contents": "CalibrateEvent(${1:nEventNumber},${2:lowerThreshold},${3:upperThreshold},${4:hysteresis})" },
		{"trigger": "ClearAllEvents      EVENTS NT","contents": "ClearAllEvents()" },
		{"trigger": "ClearEvent   nEventNumber   EVENTS NT","contents": "ClearEvent(${1:nEventNumber})" },
		{"trigger": "DirectEvent   nEventMask   EVENTS NT","contents": "DirectEvent(${1:nEventMask})" },
		{"trigger": "EVENT_MASK   nEvent   EVENTS NT","contents": "EVENT_MASK(${1:nEvent})" },
		{"trigger": "ResetEvent   nEventNumber   EVENTS NT","contents": "ResetEvent(${1:nEventNumber})" },
		{"trigger": "SetEvent   nEvent,nSensor,nType   EVENTS NT","contents": "SetEvent(${1:nEvent},${2:nSensor},${3:nType})" },
		{"trigger": "SetEvent   nEvent,nTimer,nType   EVENTS NT","contents": "SetEvent(${1:nEvent},${2:nTimer},${3:nType})" },
		{"trigger": "SetPriority   nTaskNumber,nPriority   EVENTS NT","contents": "SetPriority(${1:nTaskNumber},${2:nPriority})" },
		{"trigger": "SignalEvent   nEventNumber   EVENTS NT","contents": "SignalEvent(${1:nEventNumber})" },
		{"trigger": "EST_SENSOR[]       EVENTS NT","contents": "EST_SENSOR[] " },
		{"trigger": "eventClicks[]       EVENTS NT","contents": "eventClicks[] " },
		{"trigger": "eventCounts[]       EVENTS NT","contents": "eventCounts[] " },
		{"trigger": "eventDuration[]       EVENTS NT","contents": "eventDuration[] " },
		{"trigger": "eventHysteris[]       EVENTS NT","contents": "eventHysteris[] " },
		{"trigger": "eventLower[]       EVENTS NT","contents": "eventLower[] " },
		{"trigger": "eventState[]       EVENTS NT","contents": "eventState[] " },
		{"trigger": "eventType[]       EVENTS NT","contents": "eventType[] " },
		{"trigger": "eventUpper[]       EVENTS NT","contents": "eventUpper[] " },
		{"trigger": "nAcquirePriority       EVENTS NT","contents": "nAcquirePriority " },
		{"trigger": "taskEvents[]       EVENTS NT","contents": "taskEvents[] " },
		{"trigger": "frcDigitalIODirection[]       FRCDIGITALIO ","contents": "frcDigitalIODirection[] " },
		{"trigger": "frcDigitalIOValue[]       FRCDIGITALIO ","contents": "frcDigitalIOValue[] " },
		{"trigger": "kNumbOfDigitalIO       FRCDIGITALIO ","contents": "kNumbOfDigitalIO " },
		{"trigger": "frcRelay16[]       FRCRELAYS ","contents": "frcRelay16[] " },
		{"trigger": "frcRelay[]       FRCRELAYS ","contents": "frcRelay[] " },
		{"trigger": "kNumbOfFRCRelays       FRCRELAYS ","contents": "kNumbOfFRCRelays " },
		{"trigger": "kNumbOfFRCSingleRelays       FRCRELAYS ","contents": "kNumbOfFRCSingleRelays " },
		{"trigger": "bValidFile   nFileIndex   FILEACCESS V1V2","contents": "bValidFile(${1:nFileIndex})" },
		{"trigger": "Close   hFileHandle,nIoResult   FILEACCESS NT","contents": "Close(${1:hFileHandle},${2:nIoResult})" },
		{"trigger": "CloseAllHandles   nIoResult   FILEACCESS NT","contents": "CloseAllHandles(${1:nIoResult})" },
		{"trigger": "Delete   sFileName,nIoResult   FILEACCESS NT","contents": "Delete(${1:sFileName},${2:nIoResult})" },
		{"trigger": "Delete   pzFileName,nIoResult   FILEACCESS NT","contents": "Delete(${1:pzFileName},${2:nIoResult})" },
		{"trigger": "deleteFile   nFileIndex   FILEACCESS V1V2","contents": "deleteFile(${1:nFileIndex})" },
		{"trigger": "FindFirstFile   hFileHandle,nIoResult,sSearch,sFileName,nFilesize   FILEACCESS NT","contents": "FindFirstFile(${1:hFileHandle},${2:nIoResult},${3:sSearch},${4:sFileName},${5:nFilesize})" },
		{"trigger": "FindFirstFile   hFileHandle,nIoResult,pzSearch,sFileName,nFilesize   FILEACCESS NT","contents": "FindFirstFile(${1:hFileHandle},${2:nIoResult},${3:pzSearch},${4:sFileName},${5:nFilesize})" },
		{"trigger": "FindNextFile   hFileHandle,nIoResult,sFileName,nFilesize   FILEACCESS NT","contents": "FindNextFile(${1:hFileHandle},${2:nIoResult},${3:sFileName},${4:nFilesize})" },
		{"trigger": "OpenRead   hFileHandle,nIoResult,sFileName,nFileSize   FILEACCESS NT","contents": "OpenRead(${1:hFileHandle},${2:nIoResult},${3:sFileName},${4:nFileSize})" },
		{"trigger": "OpenRead   hFileHandle,nIoResult,pzFileName,nFileSize   FILEACCESS NT","contents": "OpenRead(${1:hFileHandle},${2:nIoResult},${3:pzFileName},${4:nFileSize})" },
		{"trigger": "OpenWrite   hFileHandle,nIoResult,sFileName,nFileSize   FILEACCESS NT","contents": "OpenWrite(${1:hFileHandle},${2:nIoResult},${3:sFileName},${4:nFileSize})" },
		{"trigger": "OpenWrite   hFileHandle,nIoResult,pzFileName,nFileSize   FILEACCESS NT","contents": "OpenWrite(${1:hFileHandle},${2:nIoResult},${3:pzFileName},${4:nFileSize})" },
		{"trigger": "ReadByte   hFileHandle,nIoResult,nParm   FILEACCESS NT","contents": "ReadByte(${1:hFileHandle},${2:nIoResult},${3:nParm})" },
		{"trigger": "ReadByteX   hFileHandle,nIoResult,nParm   FILEACCESS ","contents": "ReadByteX(${1:hFileHandle},${2:nIoResult},${3:nParm})" },
		{"trigger": "ReadFloat   hFileHandle,nIoResult,fParm   FILEACCESS NT","contents": "ReadFloat(${1:hFileHandle},${2:nIoResult},${3:fParm})" },
		{"trigger": "ReadLong   hFileHandle,nIoResult,nParm   FILEACCESS NT","contents": "ReadLong(${1:hFileHandle},${2:nIoResult},${3:nParm})" },
		{"trigger": "ReadShort   hFileHandle,nIoResult,nParm   FILEACCESS NT","contents": "ReadShort(${1:hFileHandle},${2:nIoResult},${3:nParm})" },
		{"trigger": "Rename   pzFileName,nIoResult,pzOriginalFileName   FILEACCESS NT","contents": "Rename(${1:pzFileName},${2:nIoResult},${3:pzOriginalFileName})" },
		{"trigger": "Rename   sFileName,nIoResult,sOriginalFileName   FILEACCESS NT","contents": "Rename(${1:sFileName},${2:nIoResult},${3:sOriginalFileName})" },
		{"trigger": "WriteByte   hFileHandle,nIoResult,nParm   FILEACCESS NT","contents": "WriteByte(${1:hFileHandle},${2:nIoResult},${3:nParm})" },
		{"trigger": "WriteFloat   hFileHandle,nIoResult,fParm   FILEACCESS NT","contents": "WriteFloat(${1:hFileHandle},${2:nIoResult},${3:fParm})" },
		{"trigger": "WriteLong   hFileHandle,nIoResult,nParm   FILEACCESS NT","contents": "WriteLong(${1:hFileHandle},${2:nIoResult},${3:nParm})" },
		{"trigger": "WriteShort   hFileHandle,nIoResult,nParm   FILEACCESS NT","contents": "WriteShort(${1:hFileHandle},${2:nIoResult},${3:nParm})" },
		{"trigger": "WriteString   hFileHandle,nIoResult,sParm   FILEACCESS NT","contents": "WriteString(${1:hFileHandle},${2:nIoResult},${3:sParm})" },
		{"trigger": "WriteString   hFileHandle,nIoResult,pzParm   FILEACCESS NT","contents": "WriteString(${1:hFileHandle},${2:nIoResult},${3:pzParm})" },
		{"trigger": "WriteText   hFileHandle,nIoResult,sParm   FILEACCESS NT","contents": "WriteText(${1:hFileHandle},${2:nIoResult},${3:sParm})" },
		{"trigger": "WriteText   hFileHandle,nIoResult,pzParm   FILEACCESS NT","contents": "WriteText(${1:hFileHandle},${2:nIoResult},${3:pzParm})" },
		{"trigger": "nAvailFlash       FILEACCESS NT","contents": "nAvailFlash " },
		{"trigger": "TFileHandle       FILEACCESS ","contents": "TFileHandle " },
		{"trigger": "FTCMotor[]       TETRIXCONTROLLER NT","contents": "FTCMotor[] " },
		{"trigger": "FTCServoControlEnabled       TETRIXCONTROLLER NT","contents": "FTCServoControlEnabled " },
		{"trigger": "FTCServoUsePrototype       TETRIXCONTROLLER NT","contents": "FTCServoUsePrototype " },
		{"trigger": "muxBattery       TETRIXCONTROLLER NT","contents": "muxBattery " },
		{"trigger": "muxLowBatteryShutdown       TETRIXCONTROLLER NT","contents": "muxLowBatteryShutdown " },
		{"trigger": "nxtGetAvailHSBytes      HIGHSPEED NT","contents": "nxtGetAvailHSBytes()" },
		{"trigger": "nxtReadRawHS   pData,nMaxBufferSize   HIGHSPEED NT","contents": "nxtReadRawHS(${1:pData},${2:nMaxBufferSize})" },
		{"trigger": "nxtSetHSBaudRate   nBaudRate   HIGHSPEED NT","contents": "nxtSetHSBaudRate(${1:nBaudRate})" },
		{"trigger": "nxtWriteRawHS   pData,nLength,nAddress   HIGHSPEED NT","contents": "nxtWriteRawHS(${1:pData},${2:nLength},${3:nAddress})" },
		{"trigger": "nxtWriteCharRawHS   nSingleChar,nAddress   HIGHSPEED NT","contents": "nxtWriteCharRawHS(${1:nSingleChar},${2:nAddress})" },
		{"trigger": "kDefaultBaudRate       HIGHSPEED NT","contents": "kDefaultBaudRate " },
		{"trigger": "nxtHS_Mode       HIGHSPEED NT","contents": "nxtHS_Mode " },
		{"trigger": "nxtHS_Status       HIGHSPEED NT","contents": "nxtHS_Status " },
		{"trigger": "pragmaautonomousDuration   <nDuration>   VEXCOMPETITIONCONTROL V1","contents": "pragmaautonomousDuration(${1:<nDuration>})" },
		{"trigger": "pragmacompetitionControl   <state>   VEXCOMPETITIONCONTROL V1","contents": "pragmacompetitionControl(${1:<state>})" },
		{"trigger": "pragmauserControlDuration   <nDuration>   VEXCOMPETITIONCONTROL V1","contents": "pragmauserControlDuration(${1:<nDuration>})" },
		{"trigger": "bIfiAutonomousMode       VEXCOMPETITIONCONTROL V1","contents": "bIfiAutonomousMode " },
		{"trigger": "bIfiAutonomousPhase       VEXCOMPETITIONCONTROL V1","contents": "bIfiAutonomousPhase " },
		{"trigger": "bIfiPwmOverride       VEXCOMPETITIONCONTROL V1","contents": "bIfiPwmOverride " },
		{"trigger": "bIfiRobotDisabled       VEXCOMPETITIONCONTROL V1V2","contents": "bIfiRobotDisabled " },
		{"trigger": "bVexAutonomousMode       VEXCOMPETITIONCONTROL V1V2","contents": "bVexAutonomousMode " },
		{"trigger": "nCurrCortexProgramType       VEXCOMPETITIONCONTROL V1V2","contents": "nCurrCortexProgramType " },
		{"trigger": "nIfiCompetitionState       VEXCOMPETITIONCONTROL V1V2","contents": "nIfiCompetitionState " },
		{"trigger": "nIfiUserCmd       VEXCOMPETITIONCONTROL V1","contents": "nIfiUserCmd " },
		{"trigger": "nNextCortexProgramType       VEXCOMPETITIONCONTROL V1V2","contents": "nNextCortexProgramType " },
		{"trigger": "nVEXDurationAutonomous       VEXCOMPETITIONCONTROL V1V2","contents": "nVEXDurationAutonomous " },
		{"trigger": "nVEXDurationUserControl       VEXCOMPETITIONCONTROL V1V2","contents": "nVEXDurationUserControl " },
		{"trigger": "nVexRCReceiveState       VEXCOMPETITIONCONTROL V1V2","contents": "nVexRCReceiveState " },
		{"trigger": "bIfiAutonomousModeBySlave       VEXREMOTECONTROL V1V2","contents": "bIfiAutonomousModeBySlave " },
		{"trigger": "bVEXNETActive       VEXREMOTECONTROL V1V2","contents": "bVEXNETActive " },
		{"trigger": "frcOIJoystickButtons[]       VEXREMOTECONTROL ","contents": "frcOIJoystickButtons[] " },
		{"trigger": "frcOILEDs[]       VEXREMOTECONTROL ","contents": "frcOILEDs[] " },
		{"trigger": "frcRF[]       VEXREMOTECONTROL ","contents": "frcRF[] " },
		{"trigger": "kNumbOfFrcRFJoysticks       VEXREMOTECONTROL ","contents": "kNumbOfFrcRFJoysticks " },
		{"trigger": "kNumbOfOIJoystickButtons       VEXREMOTECONTROL ","contents": "kNumbOfOIJoystickButtons " },
		{"trigger": "kNumbOfOISensors       VEXREMOTECONTROL ","contents": "kNumbOfOISensors " },
		{"trigger": "kNumbOfVexPSJoysticks       VEXREMOTECONTROL V1","contents": "kNumbOfVexPSJoysticks " },
		{"trigger": "kNumbOfVexRFJoysticks       VEXREMOTECONTROL V1V2","contents": "kNumbOfVexRFJoysticks " },
		{"trigger": "nIfiSPIMsgCounts       VEXREMOTECONTROL V1","contents": "nIfiSPIMsgCounts " },
		{"trigger": "nVexSPIMsgCounts       VEXREMOTECONTROL V1","contents": "nVexSPIMsgCounts " },
		{"trigger": "vexPSC[]       VEXREMOTECONTROL V1","contents": "vexPSC[] " },
		{"trigger": "vexRT[]       VEXREMOTECONTROL V1V2","contents": "vexRT[] " },
		{"trigger": "nxtReadIOMap   sIOMapName,nIoResult,pBuffer,nOffset,nNumbOfBytes   IOMAPACCESS NT","contents": "nxtReadIOMap(${1:sIOMapName},${2:nIoResult},${3:pBuffer},${4:nOffset},${5:nNumbOfBytes})" },
		{"trigger": "nxtWriteIOMap   sIOMapName,nIoResult,pBuffer,nOffset,nNumbOfBytes   IOMAPACCESS NT","contents": "nxtWriteIOMap(${1:sIOMapName},${2:nIoResult},${3:pBuffer},${4:nOffset},${5:nNumbOfBytes})" },
		{"trigger": "abs   input   MATH NTV2A","contents": "abs(${1:input})" },
		{"trigger": "acos   Cosine   MATH NTV2A","contents": "acos(${1:Cosine})" },
		{"trigger": "asin   Sine   MATH NTV2A","contents": "asin(${1:Sine})" },
		{"trigger": "atan   Tangent   MATH NTV2A","contents": "atan(${1:Tangent})" },
		{"trigger": "atof   pzSrce   MATH NTV2A","contents": "atof(${1:pzSrce})" },
		{"trigger": "atof   sSrce   MATH NTV2A","contents": "atof(${1:sSrce})" },
		{"trigger": "atoi   pzSrce   MATH NTV2A","contents": "atoi(${1:pzSrce})" },
		{"trigger": "atoi   sSrce   MATH NTV2A","contents": "atoi(${1:sSrce})" },
		{"trigger": "ceil   input   MATH ALL","contents": "ceil(${1:input})" },
		{"trigger": "cos   fRadians   MATH NTV2A","contents": "cos(${1:fRadians})" },
		{"trigger": "cosDegrees   degrees   MATH NTV2A","contents": "cosDegrees(${1:degrees})" },
		{"trigger": "degreesToRadians   Degrees   MATH NTV2A","contents": "degreesToRadians(${1:Degrees})" },
		{"trigger": "exp   input   MATH NTV2A","contents": "exp(${1:input})" },
		{"trigger": "floor   input   MATH ALL","contents": "floor(${1:input})" },
		{"trigger": "log   input   MATH NTV2A","contents": "log(${1:input})" },
		{"trigger": "log10   input   MATH NTV2A","contents": "log10(${1:input})" },
		{"trigger": "pow   base,exponent   MATH NTV2A","contents": "pow(${1:base},${2:exponent})" },
		{"trigger": "radiansToDegrees   fRadians   MATH NTV2A","contents": "radiansToDegrees(${1:fRadians})" },
		{"trigger": "sgn   input   MATH NTV2A","contents": "sgn(${1:input})" },
		{"trigger": "sin   fRadians   MATH NTV2A","contents": "sin(${1:fRadians})" },
		{"trigger": "sinDegrees   degrees   MATH NTV2A","contents": "sinDegrees(${1:degrees})" },
		{"trigger": "sinDegreesX   fResult,degrees   MATH NTV2A","contents": "sinDegreesX(${1:fResult},${2:degrees})" },
		{"trigger": "sinDegreesX   fResult,fRadians   MATH NTV2A","contents": "sinDegreesX(${1:fResult},${2:fRadians})" },
		{"trigger": "sqrt   input   MATH NTV2A","contents": "sqrt(${1:input})" },
		{"trigger": "srand   seed   MATH ALL","contents": "srand(${1:seed})" },
		{"trigger": "srand   nSeedValue   MATH ALL","contents": "srand(${1:nSeedValue})" },
		{"trigger": "atan2   Y,X   MATH ALL","contents": "atan2(${1:Y},${2:X})" },
		{"trigger": "round   input   MATH ALL","contents": "round(${1:input})" },
		{"trigger": "PI       MATH NTV2A","contents": "PI " },
		{"trigger": "random   range   MATH ALL","contents": "random(${1:range})" },
		{"trigger": "random[]       MATH ALL","contents": "random[] " },
		{"trigger": "rand      MATH ALL","contents": "rand()" },
		{"trigger": "randlong      MATH ALL","contents": "randlong()" },
		{"trigger": "bMsgAvailable      MULTIROBOT NT","contents": "bMsgAvailable()" },
		{"trigger": "bQueuedMsgAvailable      MULTIROBOT NT","contents": "bQueuedMsgAvailable()" },
		{"trigger": "ClearMessage      MULTIROBOT NT","contents": "ClearMessage()" },
		{"trigger": "getMessage   nNodeIndex,pData,nMaxLength,nActualLength   MULTIROBOT NT","contents": "getMessage(${1:nNodeIndex},${2:pData},${3:nMaxLength},${4:nActualLength})" },
		{"trigger": "getMyNodeIndex      MULTIROBOT NT","contents": "getMyNodeIndex()" },
		{"trigger": "getNetworkingStartupFinished      MULTIROBOT NT","contents": "getNetworkingStartupFinished()" },
		{"trigger": "getNetworkingStatus      MULTIROBOT NT","contents": "getNetworkingStatus()" },
		{"trigger": "resetNetworkDefinition      MULTIROBOT NT","contents": "resetNetworkDefinition()" },
		{"trigger": "sendMessage   nMessageID   MULTIROBOT NT","contents": "sendMessage(${1:nMessageID})" },
		{"trigger": "sendMessage   nNodeIndex,pData,nLength   MULTIROBOT NT","contents": "sendMessage(${1:nNodeIndex},${2:pData},${3:nLength})" },
		{"trigger": "sendMessageWithParm   nMessageID,nParm1,nParm2   MULTIROBOT NT","contents": "sendMessageWithParm(${1:nMessageID},${2:nParm1},${3:nParm2})" },
		{"trigger": "sendMessageWithWait   nNodeIndex,pData,nLength   MULTIROBOT NT","contents": "sendMessageWithWait(${1:nNodeIndex},${2:pData},${3:nLength})" },
		{"trigger": "setMessage   nMessage   MULTIROBOT NT","contents": "setMessage(${1:nMessage})" },
		{"trigger": "setMessage1      MULTIROBOT NT","contents": "setMessage1()" },
		{"trigger": "setMessage2WordParm   nMessage,nParm1,nParm2   MULTIROBOT NT","contents": "setMessage2WordParm(${1:nMessage},${2:nParm1},${3:nParm2})" },
		{"trigger": "setMessage3WordParm   nMessage,nParm1,nParm2,nParm3   MULTIROBOT NT","contents": "setMessage3WordParm(${1:nMessage},${2:nParm1},${3:nParm2},${4:nParm3})" },
		{"trigger": "setMessageByteParm   nMessage,nParm   MULTIROBOT NT","contents": "setMessageByteParm(${1:nMessage},${2:nParm})" },
		{"trigger": "setMessageWithParm   nMessage,nParm   MULTIROBOT NT","contents": "setMessageWithParm(${1:nMessage},${2:nParm})" },
		{"trigger": "setMessageWordParm   nMessage,nParm   MULTIROBOT NT","contents": "setMessageWordParm(${1:nMessage},${2:nParm})" },
		{"trigger": "message       MULTIROBOT NT","contents": "message " },
		{"trigger": "messageParm[]       MULTIROBOT NT","contents": "messageParm[] " },
		{"trigger": "clearAll   nCommandFlags   MISCELLANEOUS ALL","contents": "clearAll(${1:nCommandFlags})" },
		{"trigger": "getFirmwareDate   sDate   MISCELLANEOUS NT","contents": "getFirmwareDate(${1:sDate})" },
		{"trigger": "getPCJoystickSettings   joystick   MISCELLANEOUS NTV2A","contents": "getPCJoystickSettings(${1:joystick})" },
		{"trigger": "memcpy   pToBuffer,pFromBuffer,nNumbOfBytes   MISCELLANEOUS NTV1V2A","contents": "memcpy(${1:pToBuffer},${2:pFromBuffer},${3:nNumbOfBytes})" },
		{"trigger": "memmove   pToBuffer,pFromBuffer,nNumbOfBytes   MISCELLANEOUS NTV2A","contents": "memmove(${1:pToBuffer},${2:pFromBuffer},${3:nNumbOfBytes})" },
		{"trigger": "memcmp   pToBuffer,pFromBuffer,nNumbOfBytes   MISCELLANEOUS NTV1V2A","contents": "memcmp(${1:pToBuffer},${2:pFromBuffer},${3:nNumbOfBytes})" },
		{"trigger": "memset   pToBuffer,nValue,nNumbOfBytes   MISCELLANEOUS NTV1V2A","contents": "memset(${1:pToBuffer},${2:nValue},${3:nNumbOfBytes})" },
		{"trigger": "bFastSonarSensor       MISCELLANEOUS NT","contents": "bFastSonarSensor " },
		{"trigger": "bRobolab       MISCELLANEOUS NT","contents": "bRobolab " },
		{"trigger": "bVexBlackEye       MISCELLANEOUS V1","contents": "bVexBlackEye " },
		{"trigger": "counters[]       MISCELLANEOUS NT","contents": "counters[] " },
		{"trigger": "FALSE       MISCELLANEOUS ALL","contents": "FALSE " },
		{"trigger": "fResult       MISCELLANEOUS ","contents": "fResult " },
		{"trigger": "globalVars[]       MISCELLANEOUS ALL","contents": "globalVars[] " },
		{"trigger": "lResult       MISCELLANEOUS ","contents": "lResult " },
		{"trigger": "nIfiSPIMsgCounts       MISCELLANEOUS V1","contents": "nIfiSPIMsgCounts " },
		{"trigger": "nMotorBeingTrace       MISCELLANEOUS NT","contents": "nMotorBeingTrace " },
		{"trigger": "nVexMasterVersion       MISCELLANEOUS V1V2","contents": "nVexMasterVersion " },
		{"trigger": "TRUE       MISCELLANEOUS ALL","contents": "TRUE " },
		{"trigger": "version       MISCELLANEOUS ALL","contents": "version " },
		{"trigger": "changeSpeedRampingParms   nMotorIndex,nMinimumRampStartUpSpeed,nRampStartupChangeRate,nMinimumRampDownSpeed,nRampDownChangeRate   MOTORS V2A","contents": "changeSpeedRampingParms(${1:nMotorIndex},${2:nMinimumRampStartUpSpeed},${3:nRampStartupChangeRate},${4:nMinimumRampDownSpeed},${5:nRampDownChangeRate})" },
		{"trigger": "getEncoderForMotor   nMotorIndex   MOTORS V2A","contents": "getEncoderForMotor(${1:nMotorIndex})" },
		{"trigger": "mapEncoderToMotor   nMotorIndex,nSensorIndex   MOTORS V2A","contents": "mapEncoderToMotor(${1:nMotorIndex},${2:nSensorIndex})" },
		{"trigger": "bFloatDuringInactiveMotorPWM       MOTORS ALL","contents": "bFloatDuringInactiveMotorPWM " },
		{"trigger": "bMotorReflected[]       MOTORS NTV1V2A","contents": "bMotorReflected[] " },
		{"trigger": "motorA       MOTORS NT","contents": "motorA " },
		{"trigger": "motorB       MOTORS NT","contents": "motorB " },
		{"trigger": "motorC       MOTORS NT","contents": "motorC " },
		{"trigger": "motorPWMLevel[]       MOTORS NT","contents": "motorPWMLevel[] " },
		{"trigger": "motor[]       MOTORS V1V2A","contents": "motor[] " },
		{"trigger": "motor[]       MOTORS NT","contents": "motor[] " },
		{"trigger": "mtr_S1_C1_1       MOTORS NT","contents": "mtr_S1_C1_1 " },
		{"trigger": "mtr_S1_C1_2       MOTORS NT","contents": "mtr_S1_C1_2 " },
		{"trigger": "mtr_S1_C2_1       MOTORS NT","contents": "mtr_S1_C2_1 " },
		{"trigger": "mtr_S1_C2_2       MOTORS NT","contents": "mtr_S1_C2_2 " },
		{"trigger": "mtr_S1_C3_1       MOTORS NT","contents": "mtr_S1_C3_1 " },
		{"trigger": "mtr_S1_C3_2       MOTORS NT","contents": "mtr_S1_C3_2 " },
		{"trigger": "mtr_S1_C4_1       MOTORS NT","contents": "mtr_S1_C4_1 " },
		{"trigger": "mtr_S1_C4_2       MOTORS NT","contents": "mtr_S1_C4_2 " },
		{"trigger": "mtr_S2_C1_1       MOTORS NT","contents": "mtr_S2_C1_1 " },
		{"trigger": "mtr_S2_C1_2       MOTORS NT","contents": "mtr_S2_C1_2 " },
		{"trigger": "mtr_S2_C2_1       MOTORS NT","contents": "mtr_S2_C2_1 " },
		{"trigger": "mtr_S2_C2_2       MOTORS NT","contents": "mtr_S2_C2_2 " },
		{"trigger": "nIfiPwmOwner       MOTORS V1","contents": "nIfiPwmOwner " },
		{"trigger": "nMaxRegulatedSpeed       MOTORS NT","contents": "nMaxRegulatedSpeed " },
		{"trigger": "nMaxRegulatedSpeed12V       MOTORS NT","contents": "nMaxRegulatedSpeed12V " },
		{"trigger": "nMaxRegulatedSpeedNxt       MOTORS NT","contents": "nMaxRegulatedSpeedNxt " },
		{"trigger": "nMotorEncoderTarget[]       MOTORS ALL","contents": "nMotorEncoderTarget[] " },
		{"trigger": "nMotorEncoder[]       MOTORS ALL","contents": "nMotorEncoder[] " },
		{"trigger": "nMotorPIDSpeedCtrl[]       MOTORS NT","contents": "nMotorPIDSpeedCtrl[] " },
		{"trigger": "nMotorRunState[]       MOTORS NT","contents": "nMotorRunState[] " },
		{"trigger": "nPidUpdateInterval       MOTORS ALL","contents": "nPidUpdateInterval " },
		{"trigger": "nPidUpdateInterval12V       MOTORS NT","contents": "nPidUpdateInterval12V " },
		{"trigger": "nRegulatedSpeed       MOTORS NT","contents": "nRegulatedSpeed " },
		{"trigger": "nSyncedMotors       MOTORS NT","contents": "nSyncedMotors " },
		{"trigger": "nSyncedTurnRatio       MOTORS NT","contents": "nSyncedTurnRatio " },
		{"trigger": "nVexPwmOwner       MOTORS V1V2","contents": "nVexPwmOwner " },
		{"trigger": "nVirtualMotorChanges       MOTORS NT","contents": "nVirtualMotorChanges " },
		{"trigger": "port1       MOTORS V1V2","contents": "port1 " },
		{"trigger": "port10       MOTORS V1V2","contents": "port10 " },
		{"trigger": "port2       MOTORS V1V2","contents": "port2 " },
		{"trigger": "port3       MOTORS V1V2","contents": "port3 " },
		{"trigger": "port4       MOTORS V1V2","contents": "port4 " },
		{"trigger": "port5       MOTORS V1V2","contents": "port5 " },
		{"trigger": "port6       MOTORS V1V2","contents": "port6 " },
		{"trigger": "port7       MOTORS V1V2","contents": "port7 " },
		{"trigger": "port8       MOTORS V1V2","contents": "port8 " },
		{"trigger": "port9       MOTORS V1V2","contents": "port9 " },
		{"trigger": "motorType[]       MOTORS V2","contents": "motorType[] " },
		{"trigger": "Ard       PREPROCESSORDEFINES A","contents": "Ard " },
		{"trigger": "FTC       PREPROCESSORDEFINES NT","contents": "FTC " },
		{"trigger": "kNumbOfRealMotors       PREPROCESSORDEFINES ALL","contents": "kNumbOfRealMotors " },
		{"trigger": "kNumbOfRealSensors       PREPROCESSORDEFINES ALL","contents": "kNumbOfRealSensors " },
		{"trigger": "kNumbOfTotalMotors       PREPROCESSORDEFINES ALL","contents": "kNumbOfTotalMotors " },
		{"trigger": "kNumbOfTotalSensors       PREPROCESSORDEFINES ALL","contents": "kNumbOfTotalSensors " },
		{"trigger": "kNumbOfVirtualMotors       PREPROCESSORDEFINES ALL","contents": "kNumbOfVirtualMotors " },
		{"trigger": "kNumbOfVirtualSensors       PREPROCESSORDEFINES ALL","contents": "kNumbOfVirtualSensors " },
		{"trigger": "NOT_A_HANDLE       PREPROCESSORDEFINES NT","contents": "NOT_A_HANDLE " },
		{"trigger": "NXT       PREPROCESSORDEFINES NT","contents": "NXT " },
		{"trigger": "optionalBreakpoints       PREPROCESSORDEFINES ","contents": "optionalBreakpoints " },
		{"trigger": "optionalDebugSupport       PREPROCESSORDEFINES ","contents": "optionalDebugSupport " },
		{"trigger": "optionalExceptions       PREPROCESSORDEFINES ","contents": "optionalExceptions " },
		{"trigger": "optionalSwitchOpcodes       PREPROCESSORDEFINES ","contents": "optionalSwitchOpcodes " },
		{"trigger": "optionalTrinaryOpcodes       PREPROCESSORDEFINES ","contents": "optionalTrinaryOpcodes " },
		{"trigger": "optionalUploadSupport       PREPROCESSORDEFINES ","contents": "optionalUploadSupport " },
		{"trigger": "useFloats       PREPROCESSORDEFINES ","contents": "useFloats " },
		{"trigger": "useFloatsOrLongs       PREPROCESSORDEFINES ","contents": "useFloatsOrLongs " },
		{"trigger": "useLongs       PREPROCESSORDEFINES ","contents": "useLongs " },
		{"trigger": "useParmForCurrOpPtr       PREPROCESSORDEFINES ","contents": "useParmForCurrOpPtr " },
		{"trigger": "VEX       PREPROCESSORDEFINES V1V2","contents": "VEX " },
		{"trigger": "_CUSTOM       PREPROCESSORDEFINES ALL","contents": "_CUSTOM " },
		{"trigger": "_DEBUG       PREPROCESSORDEFINES ALL","contents": "_DEBUG " },
		{"trigger": "_RELEASE       PREPROCESSORDEFINES ALL","contents": "_RELEASE " },
		{"trigger": "initializeRobot   robot   ROBOTALGEBRA NT","contents": "initializeRobot(${1:robot})" },
		{"trigger": "movesEnd      ROBOTALGEBRA NT","contents": "movesEnd()" },
		{"trigger": "movesStart   waitForRoutine,waitForParam   ROBOTALGEBRA NT","contents": "movesStart(${1:waitForRoutine},${2:waitForParam})" },
		{"trigger": "setMoveMode   timingMoveMode,typeMoveMode   ROBOTALGEBRA NT","contents": "setMoveMode(${1:timingMoveMode},${2:typeMoveMode})" },
		{"trigger": "useStepThroughMode      ROBOTALGEBRA NT","contents": "useStepThroughMode()" },
		{"trigger": "straightBackward   mRot,mRotPerSec   ROBOTALGEBRA NT","contents": "straightBackward(${1:mRot},${2:mRotPerSec})" },
		{"trigger": "straightForward   mRot,mRotPerSec   ROBOTALGEBRA NT","contents": "straightForward(${1:mRot},${2:mRotPerSec})" },
		{"trigger": "turnPointLeft   mRot,mRotPerSec   ROBOTALGEBRA NT","contents": "turnPointLeft(${1:mRot},${2:mRotPerSec})" },
		{"trigger": "turnPointRight   mRot,mRotPerSec   ROBOTALGEBRA NT","contents": "turnPointRight(${1:mRot},${2:mRotPerSec})" },
		{"trigger": "turnSwingLeftBackward   mRot,mRotPerSec   ROBOTALGEBRA NT","contents": "turnSwingLeftBackward(${1:mRot},${2:mRotPerSec})" },
		{"trigger": "turnSwingLeftForward   mRot,mRotPerSec   ROBOTALGEBRA NT","contents": "turnSwingLeftForward(${1:mRot},${2:mRotPerSec})" },
		{"trigger": "turnSwingRightBackward   mRot,mRotPerSec   ROBOTALGEBRA NT","contents": "turnSwingRightBackward(${1:mRot},${2:mRotPerSec})" },
		{"trigger": "turnSwingRightForward   mRot,mRotPerSec   ROBOTALGEBRA NT","contents": "turnSwingRightForward(${1:mRot},${2:mRotPerSec})" },
		{"trigger": "robotType   type   NATURALLANGUAGE V2","contents": "robotType(${1:type})" },
		{"trigger": "robotType   type   NATURALLANGUAGE V1","contents": "robotType(${1:type})" },
		{"trigger": "robotType   type   NATURALLANGUAGE NT","contents": "robotType(${1:type})" },
		{"trigger": "robotType   type   NATURALLANGUAGE NT","contents": "robotType(${1:type})" },
		{"trigger": "setServo   servoPort,position   NATURALLANGUAGE V2","contents": "setServo(${1:servoPort},${2:position})" },
		{"trigger": "setServo   servoPort,position   NATURALLANGUAGE V1","contents": "setServo(${1:servoPort},${2:position})" },
		{"trigger": "setServo   servoPort,position   NATURALLANGUAGE NT","contents": "setServo(${1:servoPort},${2:position})" },
		{"trigger": "startMotor   motorPort,speed   NATURALLANGUAGE V2","contents": "startMotor(${1:motorPort},${2:speed})" },
		{"trigger": "startMotor   motorPort,speed   NATURALLANGUAGE V1","contents": "startMotor(${1:motorPort},${2:speed})" },
		{"trigger": "startMotor   motorPort,speed   NATURALLANGUAGE NT","contents": "startMotor(${1:motorPort},${2:speed})" },
		{"trigger": "startMotor   motorPort,speed   NATURALLANGUAGE NT","contents": "startMotor(${1:motorPort},${2:speed})" },
		{"trigger": "stopMotor   motorPort   NATURALLANGUAGE V2","contents": "stopMotor(${1:motorPort})" },
		{"trigger": "stopMotor   motorPort   NATURALLANGUAGE V1","contents": "stopMotor(${1:motorPort})" },
		{"trigger": "stopMotor   motorPort   NATURALLANGUAGE NT","contents": "stopMotor(${1:motorPort})" },
		{"trigger": "stopMotor   motorPort   NATURALLANGUAGE NT","contents": "stopMotor(${1:motorPort})" },
		{"trigger": "arcadeControl   verticalJoystick,horizontalJoystick,threshold   NATURALLANGUAGE V2","contents": "arcadeControl(${1:verticalJoystick},${2:horizontalJoystick},${3:threshold})" },
		{"trigger": "arcadeControl   verticalJoystick,horizontalJoystick,threshold   NATURALLANGUAGE NT","contents": "arcadeControl(${1:verticalJoystick},${2:horizontalJoystick},${3:threshold})" },
		{"trigger": "backward   speed   NATURALLANGUAGE V1V2","contents": "backward(${1:speed})" },
		{"trigger": "backward   speed   NATURALLANGUAGE NT","contents": "backward(${1:speed})" },
		{"trigger": "forward   speed   NATURALLANGUAGE V1V2","contents": "forward(${1:speed})" },
		{"trigger": "forward   speed   NATURALLANGUAGE NT","contents": "forward(${1:speed})" },
		{"trigger": "lineTrackForRotations   rotations,threshold,leftSensorPort,centerSensorPort,rightSensorPort   NATURALLANGUAGE V2","contents": "lineTrackForRotations(${1:rotations},${2:threshold},${3:leftSensorPort},${4:centerSensorPort},${5:rightSensorPort})" },
		{"trigger": "lineTrackForRotations   rotations,threshold,sensorPort   NATURALLANGUAGE NTV2","contents": "lineTrackForRotations(${1:rotations},${2:threshold},${3:sensorPort})" },
		{"trigger": "lineTrackForTime   trackTime,threshold,leftSensorPort,centerSensorPort,rightSensorPort   NATURALLANGUAGE V2","contents": "lineTrackForTime(${1:trackTime},${2:threshold},${3:leftSensorPort},${4:centerSensorPort},${5:rightSensorPort})" },
		{"trigger": "lineTrackForTime   trackTime,threshold,sensorPort   NATURALLANGUAGE NTV2","contents": "lineTrackForTime(${1:trackTime},${2:threshold},${3:sensorPort})" },
		{"trigger": "moveStraightForRotations   rotations,rightEncoderPort,leftEncoderPort   NATURALLANGUAGE V2","contents": "moveStraightForRotations(${1:rotations},${2:rightEncoderPort},${3:leftEncoderPort})" },
		{"trigger": "moveStraightForRotations   rotations,rightEncoderPort,leftEncoderPort   NATURALLANGUAGE NT","contents": "moveStraightForRotations(${1:rotations},${2:rightEncoderPort},${3:leftEncoderPort})" },
		{"trigger": "moveStraightForRotations   rotations,rightEncoderPort,leftEncoderPort   NATURALLANGUAGE NT","contents": "moveStraightForRotations(${1:rotations},${2:rightEncoderPort},${3:leftEncoderPort})" },
		{"trigger": "moveStraightForRotations   rotations,rightEncoderPort,leftEncoderPort   NATURALLANGUAGE V1","contents": "moveStraightForRotations(${1:rotations},${2:rightEncoderPort},${3:leftEncoderPort})" },
		{"trigger": "moveStraightForTime   seconds,rightEncoderPort,leftEncoderPort   NATURALLANGUAGE V2","contents": "moveStraightForTime(${1:seconds},${2:rightEncoderPort},${3:leftEncoderPort})" },
		{"trigger": "moveStraightForTime   seconds,rightEncoderPort,leftEncoderPort   NATURALLANGUAGE NT","contents": "moveStraightForTime(${1:seconds},${2:rightEncoderPort},${3:leftEncoderPort})" },
		{"trigger": "moveStraightForTime   seconds,rightEncoderPort,leftEncoderPort   NATURALLANGUAGE NT","contents": "moveStraightForTime(${1:seconds},${2:rightEncoderPort},${3:leftEncoderPort})" },
		{"trigger": "moveStraightForTime   seconds,rightEncoderPort,leftEncoderPort   NATURALLANGUAGE V1","contents": "moveStraightForTime(${1:seconds},${2:rightEncoderPort},${3:leftEncoderPort})" },
		{"trigger": "pointTurn   direction,speed   NATURALLANGUAGE V1V2","contents": "pointTurn(${1:direction},${2:speed})" },
		{"trigger": "pointTurn   direction,speed   NATURALLANGUAGE NT","contents": "pointTurn(${1:direction},${2:speed})" },
		{"trigger": "stop      NATURALLANGUAGE ALL","contents": "stop()" },
		{"trigger": "swingTurn   direction,speed   NATURALLANGUAGE V1V2","contents": "swingTurn(${1:direction},${2:speed})" },
		{"trigger": "swingTurn   direction,speed   NATURALLANGUAGE NT","contents": "swingTurn(${1:direction},${2:speed})" },
		{"trigger": "tankControl   rightJoystick,leftJoystick,threshold   NATURALLANGUAGE V2","contents": "tankControl(${1:rightJoystick},${2:leftJoystick},${3:threshold})" },
		{"trigger": "tankControl   rightJoystick,leftJoystick,threshold   NATURALLANGUAGE NT","contents": "tankControl(${1:rightJoystick},${2:leftJoystick},${3:threshold})" },
		{"trigger": "wait   waitTime   NATURALLANGUAGE NTV2","contents": "wait(${1:waitTime})" },
		{"trigger": "wait   waitTime   NATURALLANGUAGE V1","contents": "wait(${1:waitTime})" },
		{"trigger": "waitInMilliseconds   waitTime   NATURALLANGUAGE NTV1V2","contents": "waitInMilliseconds(${1:waitTime})" },
		{"trigger": "untilBump   sensorPort,delayTimeMS   NATURALLANGUAGE V2","contents": "untilBump(${1:sensorPort},${2:delayTimeMS})" },
		{"trigger": "untilBump   sensorPort,delayTimeMS   NATURALLANGUAGE V1","contents": "untilBump(${1:sensorPort},${2:delayTimeMS})" },
		{"trigger": "untilBump   sensorPort,delayTimeMS   NATURALLANGUAGE NT","contents": "untilBump(${1:sensorPort},${2:delayTimeMS})" },
		{"trigger": "untilButtonPress   button   NATURALLANGUAGE V1V2","contents": "untilButtonPress(${1:button})" },
		{"trigger": "untilButtonPress   button   NATURALLANGUAGE NT","contents": "untilButtonPress(${1:button})" },
		{"trigger": "untilDark   threshold,sensorPort   NATURALLANGUAGE V2","contents": "untilDark(${1:threshold},${2:sensorPort})" },
		{"trigger": "untilDark   threshold,sensorPort   NATURALLANGUAGE V1","contents": "untilDark(${1:threshold},${2:sensorPort})" },
		{"trigger": "untilDark   threshold,sensorPort   NATURALLANGUAGE NT","contents": "untilDark(${1:threshold},${2:sensorPort})" },
		{"trigger": "untilEncoderCounts   distance,motorPort   NATURALLANGUAGE NT","contents": "untilEncoderCounts(${1:distance},${2:motorPort})" },
		{"trigger": "untilEncoderCounts   distance,motorPort   NATURALLANGUAGE NT","contents": "untilEncoderCounts(${1:distance},${2:motorPort})" },
		{"trigger": "untilEncoderCounts   distance,sensorPort   NATURALLANGUAGE V2","contents": "untilEncoderCounts(${1:distance},${2:sensorPort})" },
		{"trigger": "untilEncoderCounts   distance,sensorPort   NATURALLANGUAGE V1","contents": "untilEncoderCounts(${1:distance},${2:sensorPort})" },
		{"trigger": "untilLight   threshold,sensorPort   NATURALLANGUAGE V2","contents": "untilLight(${1:threshold},${2:sensorPort})" },
		{"trigger": "untilLight   threshold,sensorPort   NATURALLANGUAGE V1","contents": "untilLight(${1:threshold},${2:sensorPort})" },
		{"trigger": "untilLight   threshold,sensorPort   NATURALLANGUAGE NT","contents": "untilLight(${1:threshold},${2:sensorPort})" },
		{"trigger": "untilPotentiometerGreaterThan   position,sensorPort   NATURALLANGUAGE V2","contents": "untilPotentiometerGreaterThan(${1:position},${2:sensorPort})" },
		{"trigger": "untilPotentiometerGreaterThan   position,sensorPort   NATURALLANGUAGE V1","contents": "untilPotentiometerGreaterThan(${1:position},${2:sensorPort})" },
		{"trigger": "untilPotentiometerLessThan   position,sensorPort   NATURALLANGUAGE V2","contents": "untilPotentiometerLessThan(${1:position},${2:sensorPort})" },
		{"trigger": "untilPotentiometerLessThan   position,sensorPort   NATURALLANGUAGE V1","contents": "untilPotentiometerLessThan(${1:position},${2:sensorPort})" },
		{"trigger": "untilRelease   sensorPort   NATURALLANGUAGE V2","contents": "untilRelease(${1:sensorPort})" },
		{"trigger": "untilRelease   sensorPort   NATURALLANGUAGE V1","contents": "untilRelease(${1:sensorPort})" },
		{"trigger": "untilRelease   sensorPort   NATURALLANGUAGE NT","contents": "untilRelease(${1:sensorPort})" },
		{"trigger": "untilRotations   rotations,motorPort   NATURALLANGUAGE NT","contents": "untilRotations(${1:rotations},${2:motorPort})" },
		{"trigger": "untilRotations   rotations,motorPort   NATURALLANGUAGE NT","contents": "untilRotations(${1:rotations},${2:motorPort})" },
		{"trigger": "untilRotations   rotations,sensorPort   NATURALLANGUAGE V2","contents": "untilRotations(${1:rotations},${2:sensorPort})" },
		{"trigger": "untilRotations   rotations,sensorPort   NATURALLANGUAGE V1","contents": "untilRotations(${1:rotations},${2:sensorPort})" },
		{"trigger": "untilSonarGreaterThan   distance,sensorPort   NATURALLANGUAGE V2","contents": "untilSonarGreaterThan(${1:distance},${2:sensorPort})" },
		{"trigger": "untilSonarGreaterThan   distance,sensorPort   NATURALLANGUAGE V1","contents": "untilSonarGreaterThan(${1:distance},${2:sensorPort})" },
		{"trigger": "untilSonarGreaterThan   distance,sensorPort   NATURALLANGUAGE NT","contents": "untilSonarGreaterThan(${1:distance},${2:sensorPort})" },
		{"trigger": "untilSonarLessThan   distance,sensorPort   NATURALLANGUAGE V2","contents": "untilSonarLessThan(${1:distance},${2:sensorPort})" },
		{"trigger": "untilSonarLessThan   distance,sensorPort   NATURALLANGUAGE V1","contents": "untilSonarLessThan(${1:distance},${2:sensorPort})" },
		{"trigger": "untilSonarLessThan   distance,sensorPort   NATURALLANGUAGE NT","contents": "untilSonarLessThan(${1:distance},${2:sensorPort})" },
		{"trigger": "untilSoundGreaterThan   threshold,sensorPort   NATURALLANGUAGE NT","contents": "untilSoundGreaterThan(${1:threshold},${2:sensorPort})" },
		{"trigger": "untilSoundLessThan   threshold,sensorPort   NATURALLANGUAGE NT","contents": "untilSoundLessThan(${1:threshold},${2:sensorPort})" },
		{"trigger": "untilTouch   sensorPort   NATURALLANGUAGE V2","contents": "untilTouch(${1:sensorPort})" },
		{"trigger": "untilTouch   sensorPort   NATURALLANGUAGE V1","contents": "untilTouch(${1:sensorPort})" },
		{"trigger": "untilTouch   sensorPort   NATURALLANGUAGE NT","contents": "untilTouch(${1:sensorPort})" },
		{"trigger": "untilCompassDegrees   degrees,buffer   NATURALLANGUAGE NV2","contents": "untilCompassDegrees(${1:degrees},${2:buffer})" },
		{"trigger": "turnFlashlightOff   flashlightPort   NATURALLANGUAGE V2","contents": "turnFlashlightOff(${1:flashlightPort})" },
		{"trigger": "turnFlashlightOff   flashlightPort   NATURALLANGUAGE V1","contents": "turnFlashlightOff(${1:flashlightPort})" },
		{"trigger": "turnFlashlightOn   flashlightPort,brightness   NATURALLANGUAGE V2","contents": "turnFlashlightOn(${1:flashlightPort},${2:brightness})" },
		{"trigger": "turnFlashlightOn   flashlightPort,brightness   NATURALLANGUAGE V1","contents": "turnFlashlightOn(${1:flashlightPort},${2:brightness})" },
		{"trigger": "turnLEDOff   digitalPort   NATURALLANGUAGE V2","contents": "turnLEDOff(${1:digitalPort})" },
		{"trigger": "turnLEDOff   digitalPort   NATURALLANGUAGE V1","contents": "turnLEDOff(${1:digitalPort})" },
		{"trigger": "turnLEDOn   digitalPort   NATURALLANGUAGE V2","contents": "turnLEDOn(${1:digitalPort})" },
		{"trigger": "turnLEDOn   digitalPort   NATURALLANGUAGE V1","contents": "turnLEDOn(${1:digitalPort})" },
		{"trigger": "SemaphoreInitialize   nSemaphore   SEMAPHORE NTV2A","contents": "SemaphoreInitialize(${1:nSemaphore})" },
		{"trigger": "SemaphoreLock   nSemaphore,waitTime   SEMAPHORE NTV2A","contents": "SemaphoreLock(${1:nSemaphore},${2:waitTime})" },
		{"trigger": "SemaphoreUnlock   nSemaphore   SEMAPHORE NTV2A","contents": "SemaphoreUnlock(${1:nSemaphore})" },
		{"trigger": "ClearSensorValue   nSensor   SENSORS ALL","contents": "ClearSensorValue(${1:nSensor})" },
		{"trigger": "getColorSensorData   nPort,nDataType,pData   SENSORS ","contents": "getColorSensorData(${1:nPort},${2:nDataType},${3:pData})" },
		{"trigger": "getColorSensorPegCounts   nPort,pData   SENSORS ","contents": "getColorSensorPegCounts(${1:nPort},${2:pData})" },
		{"trigger": "getSensorRawADValue   nPort   SENSORS ALL","contents": "getSensorRawADValue(${1:nPort})" },
		{"trigger": "SetSensorMode   nSensor,mode   SENSORS NT","contents": "SetSensorMode(${1:nSensor},${2:mode})" },
		{"trigger": "SetSensorType   nSensor,type   SENSORS ","contents": "SetSensorType(${1:nSensor},${2:type})" },
		{"trigger": "validColorSensor   nPort   SENSORS ","contents": "validColorSensor(${1:nPort})" },
		{"trigger": "shiftOut   dataPin,clockPin,bBitOrderLSBFirst,nValue,nDelay   SENSORS ALL","contents": "shiftOut(${1:dataPin},${2:clockPin},${3:bBitOrderLSBFirst},${4:nValue},${5:nDelay})" },
		{"trigger": "dgtl1       SENSORS V1V2","contents": "dgtl1 " },
		{"trigger": "dgtl10       SENSORS V1V2","contents": "dgtl10 " },
		{"trigger": "dgtl11       SENSORS V1V2","contents": "dgtl11 " },
		{"trigger": "dgtl12       SENSORS V1V2","contents": "dgtl12 " },
		{"trigger": "dgtl2       SENSORS V1V2","contents": "dgtl2 " },
		{"trigger": "dgtl3       SENSORS V1V2","contents": "dgtl3 " },
		{"trigger": "dgtl4       SENSORS V1V2","contents": "dgtl4 " },
		{"trigger": "dgtl5       SENSORS V1V2","contents": "dgtl5 " },
		{"trigger": "dgtl6       SENSORS V1V2","contents": "dgtl6 " },
		{"trigger": "dgtl7       SENSORS V1V2","contents": "dgtl7 " },
		{"trigger": "dgtl8       SENSORS V1V2","contents": "dgtl8 " },
		{"trigger": "dgtl9       SENSORS V1V2","contents": "dgtl9 " },
		{"trigger": "getSensorRawADValue[]       SENSORS ALL","contents": "getSensorRawADValue[] " },
		{"trigger": "I2C_1       SENSORS V1V2","contents": "I2C_1 " },
		{"trigger": "I2C_2       SENSORS V1V2","contents": "I2C_2 " },
		{"trigger": "I2C_3       SENSORS V1V2","contents": "I2C_3 " },
		{"trigger": "I2C_4       SENSORS V1V2","contents": "I2C_4 " },
		{"trigger": "I2C_5       SENSORS V1V2","contents": "I2C_5 " },
		{"trigger": "I2C_6       SENSORS V1V2","contents": "I2C_6 " },
		{"trigger": "I2C_7       SENSORS V1V2","contents": "I2C_7 " },
		{"trigger": "I2C_8       SENSORS V1V2","contents": "I2C_8 " },
		{"trigger": "ifiInterruptPorts[]       SENSORS V1","contents": "ifiInterruptPorts[] " },
		{"trigger": "in1       SENSORS V1V2","contents": "in1 " },
		{"trigger": "in2       SENSORS V1V2","contents": "in2 " },
		{"trigger": "in3       SENSORS V1V2","contents": "in3 " },
		{"trigger": "in4       SENSORS V1V2","contents": "in4 " },
		{"trigger": "in5       SENSORS V1V2","contents": "in5 " },
		{"trigger": "in6       SENSORS V1V2","contents": "in6 " },
		{"trigger": "in7       SENSORS V1V2","contents": "in7 " },
		{"trigger": "in8       SENSORS V1V2","contents": "in8 " },
		{"trigger": "kLastBuiltinNxtSensor       SENSORS ","contents": "kLastBuiltinNxtSensor " },
		{"trigger": "kNumbOfPSJoysticks       SENSORS NTV1","contents": "kNumbOfPSJoysticks " },
		{"trigger": "nAnalogChannelCount       SENSORS V1V2","contents": "nAnalogChannelCount " },
		{"trigger": "nMissedSensorAtoDConversions       SENSORS R","contents": "nMissedSensorAtoDConversions " },
		{"trigger": "nPSControl[]       SENSORS V1","contents": "nPSControl[] " },
		{"trigger": "nPSControl[]       SENSORS NT","contents": "nPSControl[] " },
		{"trigger": "nVirtualSensorModeChanges       SENSORS NT","contents": "nVirtualSensorModeChanges " },
		{"trigger": "nVirtualSensorTypeChanges       SENSORS NT","contents": "nVirtualSensorTypeChanges " },
		{"trigger": "S1       SENSORS NT","contents": "S1 " },
		{"trigger": "S2       SENSORS NT","contents": "S2 " },
		{"trigger": "S3       SENSORS NT","contents": "S3 " },
		{"trigger": "S4       SENSORS NT","contents": "S4 " },
		{"trigger": "SensorBias[]       SENSORS V1V2A","contents": "SensorBias[] " },
		{"trigger": "SensorSmallBias[]       SENSORS V1V2A","contents": "SensorSmallBias[] " },
		{"trigger": "SensorBoolean[]       SENSORS ALL","contents": "SensorBoolean[] " },
		{"trigger": "SensorDeadBand[]       SENSORS V1V2A","contents": "SensorDeadBand[] " },
		{"trigger": "SensorFullCount[]       SENSORS V1V2A","contents": "SensorFullCount[] " },
		{"trigger": "SensorMode[]       SENSORS NT","contents": "SensorMode[] " },
		{"trigger": "SensorRaw[]       SENSORS ALL","contents": "SensorRaw[] " },
		{"trigger": "SensorScale[]       SENSORS V1V2A","contents": "SensorScale[] " },
		{"trigger": "SensorSubType[]       SENSORS NT","contents": "SensorSubType[] " },
		{"trigger": "SensorType[]       SENSORS ALL","contents": "SensorType[] " },
		{"trigger": "SensorValue      SENSORS ALL","contents": "SensorValue()" },
		{"trigger": "SensorValue[]       SENSORS ALL","contents": "SensorValue[] " },
		{"trigger": "getI2CSensorData   nSensorIndex,nNumbOfBytes,nBuffer   SENSORSI2C NT","contents": "getI2CSensorData(${1:nSensorIndex},${2:nNumbOfBytes},${3:nBuffer})" },
		{"trigger": "readI2CReply   nPort,replyBytes,nBytesToRead   SENSORSI2C NT","contents": "readI2CReply(${1:nPort},${2:replyBytes},${3:nBytesToRead})" },
		{"trigger": "readI2CReply   nPort,pReplyBytes,nBytesToRead   SENSORSI2C NT","contents": "readI2CReply(${1:nPort},${2:pReplyBytes},${3:nBytesToRead})" },
		{"trigger": "sendI2CMsg   nPort,pSendMsg,nReplySize   SENSORSI2C NT","contents": "sendI2CMsg(${1:nPort},${2:pSendMsg},${3:nReplySize})" },
		{"trigger": "sendI2CMsg   nPort,sendMsg,nReplySize   SENSORSI2C NT","contents": "sendI2CMsg(${1:nPort},${2:sendMsg},${3:nReplySize})" },
		{"trigger": "bI2CCheckACKs       SENSORSI2C NT","contents": "bI2CCheckACKs " },
		{"trigger": "nI2CBytesReady[]       SENSORSI2C NT","contents": "nI2CBytesReady[] " },
		{"trigger": "nI2CRetries       SENSORSI2C NT","contents": "nI2CRetries " },
		{"trigger": "nI2CStatus[]       SENSORSI2C NT","contents": "nI2CStatus[] " },
		{"trigger": "readI2CReply   replyBytes,nBytesToRead   SENSORSI2C V2","contents": "readI2CReply(${1:replyBytes},${2:nBytesToRead})" },
		{"trigger": "sendI2CMsg   sendMsg,nReplySize   SENSORSI2C V2","contents": "sendI2CMsg(${1:sendMsg},${2:nReplySize})" },
		{"trigger": "bXmitComplete   nPort   SERIALLINK V2A","contents": "bXmitComplete(${1:nPort})" },
		{"trigger": "configureSerialPort   nPort,nMode   SERIALLINK V2A","contents": "configureSerialPort(${1:nPort},${2:nMode})" },
		{"trigger": "getChar   nPort   SERIALLINK V2A","contents": "getChar(${1:nPort})" },
		{"trigger": "sendChar   nPort,nChar   SERIALLINK V2A","contents": "sendChar(${1:nPort},${2:nChar})" },
		{"trigger": "setBaudRate   nPort,nBaudRate   SERIALLINK V2A","contents": "setBaudRate(${1:nPort},${2:nBaudRate})" },
		{"trigger": "getUartConfig   nPort   SERIALLINK V2A","contents": "getUartConfig(${1:nPort})" },
		{"trigger": "kNumbOfServos       SERVOS NT","contents": "kNumbOfServos " },
		{"trigger": "muxUpdateInterval       SERVOS NT","contents": "muxUpdateInterval " },
		{"trigger": "servoChangeRate[]       SERVOS NT","contents": "servoChangeRate[] " },
		{"trigger": "servoMaxPos[]       SERVOS NT","contents": "servoMaxPos[] " },
		{"trigger": "servoMinPos[]       SERVOS NT","contents": "servoMinPos[] " },
		{"trigger": "servoTarget[]       SERVOS NT","contents": "servoTarget[] " },
		{"trigger": "ServoType[]       SERVOS NT","contents": "ServoType[] " },
		{"trigger": "ServoValue[]       SERVOS NT","contents": "ServoValue[] " },
		{"trigger": "servo[]       SERVOS NT","contents": "servo[] " },
		{"trigger": "bSystemLeaveServosEnabledOnProgramStop       SERVOS NT","contents": "bSystemLeaveServosEnabledOnProgramStop " },
		{"trigger": "ClearSounds      SOUND ALL","contents": "ClearSounds()" },
		{"trigger": "MuteSound      SOUND ALL","contents": "MuteSound()" },
		{"trigger": "PlayImmediateTone   frequency,durationIn10MsecTicks   SOUND ALL","contents": "PlayImmediateTone(${1:frequency},${2:durationIn10MsecTicks})" },
		{"trigger": "PlaySound   sound   SOUND ALL","contents": "PlaySound(${1:sound})" },
		{"trigger": "PlaySoundFile   sFileName   SOUND ALL","contents": "PlaySoundFile(${1:sFileName})" },
		{"trigger": "PlayTone   frequency,durationIn10MsecTicks   SOUND ALL","contents": "PlayTone(${1:frequency},${2:durationIn10MsecTicks})" },
		{"trigger": "UnmuteSound      SOUND ALL","contents": "UnmuteSound()" },
		{"trigger": "bHasSoundDriver       SOUND V2","contents": "bHasSoundDriver " },
		{"trigger": "bIFISoundTicks       SOUND V2","contents": "bIFISoundTicks " },
		{"trigger": "bPlaySounds       SOUND NTV2AR","contents": "bPlaySounds " },
		{"trigger": "bSoundActive       SOUND NTV2AR","contents": "bSoundActive " },
		{"trigger": "bSoundQueueAvailable       SOUND NTV2AR","contents": "bSoundQueueAvailable " },
		{"trigger": "kMaxVolumeLevel       SOUND NT","contents": "kMaxVolumeLevel " },
		{"trigger": "nVolume       SOUND NT","contents": "nVolume " },
		{"trigger": "snprintf   ppDest,nDestLength,sFormatString   STRINGS NTV2A","contents": "snprintf(${1:ppDest},${2:nDestLength},${3:sFormatString})" },
		{"trigger": "snprintf   ppDest,nDestLength,sFormatString,...   STRINGS NTV2A","contents": "snprintf(${1:ppDest},${2:nDestLength},${3:sFormatString},${4:...})" },
		{"trigger": "snprintf   ppDest,nDestLength,pzFormatString,...   STRINGS NTV2A","contents": "snprintf(${1:ppDest},${2:nDestLength},${3:pzFormatString},${4:...})" },
		{"trigger": "sprintf   pDest,sFmtSpec,...   STRINGS NTV2A","contents": "sprintf(${1:pDest},${2:sFmtSpec},${3:...})" },
		{"trigger": "sprintf   ppDest,sFormatString,...   STRINGS NTV2A","contents": "sprintf(${1:ppDest},${2:sFormatString},${3:...})" },
		{"trigger": "sprintf   sString,sFormatString   STRINGS NTV2A","contents": "sprintf(${1:sString},${2:sFormatString})" },
		{"trigger": "sprintf   sString,sFormatString,...   STRINGS NTV2A","contents": "sprintf(${1:sString},${2:sFormatString},${3:...})" },
		{"trigger": "sprintf   sDest,pzFormatString,...   STRINGS NTV2A","contents": "sprintf(${1:sDest},${2:pzFormatString},${3:...})" },
		{"trigger": "sprintf   pzCharsString,pzFormatString,...   STRINGS NTV2A","contents": "sprintf(${1:pzCharsString},${2:pzFormatString},${3:...})" },
		{"trigger": "sscanf       STRINGS NTV2A","contents": "sscanf(${1: })" },
		{"trigger": "sscanf   sSource,sFormatString,...   STRINGS NTV2A","contents": "sscanf(${1:sSource},${2:sFormatString},${3:...})" },
		{"trigger": "sscanf   pzSource,pzFormatString,...   STRINGS NTV2A","contents": "sscanf(${1:pzSource},${2:pzFormatString},${3:...})" },
		{"trigger": "strcat   pToBuffer,pFromBuffer   STRINGS NTV2A","contents": "strcat(${1:pToBuffer},${2:pFromBuffer})" },
		{"trigger": "strcat   sToString,pFromBuffer   STRINGS NTV2A","contents": "strcat(${1:sToString},${2:pFromBuffer})" },
		{"trigger": "strcatSingleChar   pToBuffer,cSingleChar   STRINGS NTV2A","contents": "strcatSingleChar(${1:pToBuffer},${2:cSingleChar})" },
		{"trigger": "strcmp   pString1,pString2   STRINGS NTV2A","contents": "strcmp(${1:pString1},${2:pString2})" },
		{"trigger": "strcpy   pToBuffer,pFromBuffer   STRINGS NTV2A","contents": "strcpy(${1:pToBuffer},${2:pFromBuffer})" },
		{"trigger": "strIndex   sString,nIndex   STRINGS NTV2A","contents": "strIndex(${1:sString},${2:nIndex})" },
		{"trigger": "StringAssign   sDest,nSrce   STRINGS NTV2A","contents": "StringAssign(${1:sDest},${2:nSrce})" },
		{"trigger": "StringAssign   sDest,sSrce   STRINGS NTV2A","contents": "StringAssign(${1:sDest},${2:sSrce})" },
		{"trigger": "StringAssign   sDest,pzSrce   STRINGS NTV2A","contents": "StringAssign(${1:sDest},${2:pzSrce})" },
		{"trigger": "StringConcatenate   sDest,nSrce   STRINGS NTV2A","contents": "StringConcatenate(${1:sDest},${2:nSrce})" },
		{"trigger": "StringConcatenate   sDest,sSrce   STRINGS NTV2A","contents": "StringConcatenate(${1:sDest},${2:sSrce})" },
		{"trigger": "StringConcatenate   sDest,pzSrce   STRINGS NTV2A","contents": "StringConcatenate(${1:sDest},${2:pzSrce})" },
		{"trigger": "StringDelete   sDest,nIndex,nSize   STRINGS NTV2A","contents": "StringDelete(${1:sDest},${2:nIndex},${3:nSize})" },
		{"trigger": "StringFind   sSrce,sSearch   STRINGS NTV2A","contents": "StringFind(${1:sSrce},${2:sSearch})" },
		{"trigger": "StringFind   sSrce,sFindString   STRINGS NTV2A","contents": "StringFind(${1:sSrce},${2:sFindString})" },
		{"trigger": "StringFind   sSrce,pzFindString   STRINGS NTV2A","contents": "StringFind(${1:sSrce},${2:pzFindString})" },
		{"trigger": "StringFormat   sDest,sFormatString   STRINGS NTV2A","contents": "StringFormat(${1:sDest},${2:sFormatString})" },
		{"trigger": "StringFormat   sDest,sFormatString,...   STRINGS NTV2A","contents": "StringFormat(${1:sDest},${2:sFormatString},${3:...})" },
		{"trigger": "StringFormat   sDest,pzFormatString,...   STRINGS NTV2A","contents": "StringFormat(${1:sDest},${2:pzFormatString},${3:...})" },
		{"trigger": "StringFromChars   sToString,sFromChars   STRINGS NTV2A","contents": "StringFromChars(${1:sToString},${2:sFromChars})" },
		{"trigger": "StringFromChars   sToString,pFromChars   STRINGS NTV2A","contents": "StringFromChars(${1:sToString},${2:pFromChars})" },
		{"trigger": "StringGetAddress   sSrce   STRINGS NTV2A","contents": "StringGetAddress(${1:sSrce})" },
		{"trigger": "StringGetChar   sSrce,nIndex   STRINGS NTV2A","contents": "StringGetChar(${1:sSrce},${2:nIndex})" },
		{"trigger": "StringSize   sString,nSize   STRINGS NTV2A","contents": "StringSize(${1:sString},${2:nSize})" },
		{"trigger": "strlen   sString   STRINGS NTV2A","contents": "strlen(${1:sString})" },
		{"trigger": "strlen   pString   STRINGS NTV2A","contents": "strlen(${1:pString})" },
		{"trigger": "strncat   pToBuffer,pFromBuffer,nMaxBufferSize   STRINGS NTV2A","contents": "strncat(${1:pToBuffer},${2:pFromBuffer},${3:nMaxBufferSize})" },
		{"trigger": "strncatSingleChar   pToBuffer,cSingleChar,nMaxBufferSize   STRINGS NTV2A","contents": "strncatSingleChar(${1:pToBuffer},${2:cSingleChar},${3:nMaxBufferSize})" },
		{"trigger": "strncmp   pString1,pString2,nMaxBufferSize   STRINGS NTV2A","contents": "strncmp(${1:pString1},${2:pString2},${3:nMaxBufferSize})" },
		{"trigger": "strncpy   pToBuffer,pFromBuffer,nMaxBufferSize   STRINGS NTV2A","contents": "strncpy(${1:pToBuffer},${2:pFromBuffer},${3:nMaxBufferSize})" },
		{"trigger": "strTrim   pString   STRINGS NTV2A","contents": "strTrim(${1:pString})" },
		{"trigger": "strTrim   sString   STRINGS NTV2A","contents": "strTrim(${1:sString})" },
		{"trigger": "strTrimN   pString,nMaxBufferSize   STRINGS NTV2A","contents": "strTrimN(${1:pString},${2:nMaxBufferSize})" },
		{"trigger": "reverseChars   sSrce   STRINGS NTV2A","contents": "reverseChars(${1:sSrce})" },
		{"trigger": "reverseChars   pSrce   STRINGS NTV2A","contents": "reverseChars(${1:pSrce})" },
		{"trigger": "abortTimeslice      TASKCONTROL ALL","contents": "abortTimeslice()" },
		{"trigger": "callSub   number   TASKCONTROL ALL","contents": "callSub(${1:number})" },
		{"trigger": "EndTimeSlice      TASKCONTROL NTV2A","contents": "EndTimeSlice()" },
		{"trigger": "getFileName   nFileIndex,sFileName   TASKCONTROL AR","contents": "getFileName(${1:nFileIndex},${2:sFileName})" },
		{"trigger": "getFileType   nFileIndex   TASKCONTROL AR","contents": "getFileType(${1:nFileIndex})" },
		{"trigger": "getIdleTimeProgramIndex      TASKCONTROL V2A","contents": "getIdleTimeProgramIndex()" },
		{"trigger": "getStartupProgramIndex      TASKCONTROL V2A","contents": "getStartupProgramIndex()" },
		{"trigger": "getTaskPriority   TaskID   TASKCONTROL ALL","contents": "getTaskPriority(${1:TaskID})" },
		{"trigger": "getTaskState   TaskID   TASKCONTROL ALL","contents": "getTaskState(${1:TaskID})" },
		{"trigger": "hogCPU      TASKCONTROL ALL","contents": "hogCPU()" },
		{"trigger": "releaseCPU      TASKCONTROL ALL","contents": "releaseCPU()" },
		{"trigger": "resumeTask   TaskID   TASKCONTROL ALL","contents": "resumeTask(${1:TaskID})" },
		{"trigger": "setTaskPriority   TaskID,nTaskPriority   TASKCONTROL ALL","contents": "setTaskPriority(${1:TaskID},${2:nTaskPriority})" },
		{"trigger": "StartTask   TaskID   TASKCONTROL ALL","contents": "StartTask(${1:TaskID})" },
		{"trigger": "StartTask   TaskID,nTaskPriority   TASKCONTROL ALL","contents": "StartTask(${1:TaskID},${2:nTaskPriority})" },
		{"trigger": "StopAllTasks      TASKCONTROL ALL","contents": "StopAllTasks()" },
		{"trigger": "StopTask   TaskID   TASKCONTROL ALL","contents": "StopTask(${1:TaskID})" },
		{"trigger": "suspendTask   TaskID   TASKCONTROL ALL","contents": "suspendTask(${1:TaskID})" },
		{"trigger": "bClearVariablesOnPgmStart       TASKCONTROL NTV2A","contents": "bClearVariablesOnPgmStart " },
		{"trigger": "kDefaultPriority       TASKCONTROL ALL","contents": "kDefaultPriority " },
		{"trigger": "kDefaultTaskPriority       TASKCONTROL ALL","contents": "kDefaultTaskPriority " },
		{"trigger": "kHighPriority       TASKCONTROL ALL","contents": "kHighPriority " },
		{"trigger": "kLowPriority       TASKCONTROL ALL","contents": "kLowPriority " },
		{"trigger": "nCurrentTask       TASKCONTROL ALL","contents": "nCurrentTask " },
		{"trigger": "nDefaultStackSize       TASKCONTROL NT","contents": "nDefaultStackSize " },
		{"trigger": "nExceptionReports       TASKCONTROL ALL","contents": "nExceptionReports " },
		{"trigger": "nMemoryMapAddress       TASKCONTROL ALL","contents": "nMemoryMapAddress " },
		{"trigger": "nMemoryMapAddressHigh       TASKCONTROL NTV2A","contents": "nMemoryMapAddressHigh " },
		{"trigger": "nNxtExitClicks       TASKCONTROL NT","contents": "nNxtExitClicks " },
		{"trigger": "nOpcodesPerTimeslice       TASKCONTROL ALL","contents": "nOpcodesPerTimeslice " },
		{"trigger": "nRemoteButton       TASKCONTROL NTV1V2","contents": "nRemoteButton " },
		{"trigger": "nSchedulePriority       TASKCONTROL ALL","contents": "nSchedulePriority " },
		{"trigger": "nStackSize[]       TASKCONTROL ALL","contents": "nStackSize[] " },
		{"trigger": "programNumber       TASKCONTROL V1V2A","contents": "programNumber " },
		{"trigger": "pStartOfFlashFileHdr       TASKCONTROL NTV2A","contents": "pStartOfFlashFileHdr " },
		{"trigger": "ClearTimer   theTimer   TIMING ALL","contents": "ClearTimer(${1:theTimer})" },
		{"trigger": "setClockTime   hours,minutes   TIMING ALL","contents": "setClockTime(${1:hours},${2:minutes})" },
		{"trigger": "wait10Msec   nTenMSec   TIMING ALL","contents": "wait10Msec(${1:nTenMSec})" },
		{"trigger": "wait1Msec   nMSec   TIMING ALL","contents": "wait1Msec(${1:nMSec})" },
		{"trigger": "Sleep   nMSec   TIMING ALL","contents": "Sleep(${1:nMSec})" },
		{"trigger": "noOp      TIMING ALL","contents": "noOp()" },
		{"trigger": "nClockMinutes       TIMING ALL","contents": "nClockMinutes " },
		{"trigger": "nPgmTime       TIMING ALL","contents": "nPgmTime " },
		{"trigger": "nSysTime       TIMING ALL","contents": "nSysTime " },
		{"trigger": "time100[]       TIMING ALL","contents": "time100[] " },
		{"trigger": "time10[]       TIMING ALL","contents": "time10[] " },
		{"trigger": "time1[]       TIMING ALL","contents": "time1[] " },
		{"trigger": "pragmacamera   <platformlist>   PRAGMAS ALL","contents": "pragmacamera(${1:<platformlist>})" },
		{"trigger": "pragmafileExtension   <extension>   PRAGMAS NT","contents": "pragmafileExtension(${1:<extension>})" },
		{"trigger": "pragmanoProlog       PRAGMAS ALL","contents": "pragmanoProlog " },
		{"trigger": "pragmaplatform   <platformlist>   PRAGMAS ALL","contents": "pragmaplatform(${1:<platformlist>})" }
	]
}
