{
	"scope": "source.c",

	"completions":
	[
		{"trigger": "alive", "contents": "alive()" },
		{"trigger": "powerOff", "contents": "powerOff()" },
		{"trigger": "setPowerDownDelay", "contents": "setPowerDownDelay(${1:minutes})" },
		{"trigger": "bNoPowerDownOnACAdaptor", "contents": "bNoPowerDownOnACAdaptor" },
		{"trigger": "bNxtRechargable", "contents": "bNxtRechargable" },
		{"trigger": "externalBattery", "contents": "externalBattery" },
		{"trigger": "externalBatteryAvg", "contents": "externalBatteryAvg" },
		{"trigger": "LowVoltageBatteryCountLimits", "contents": "LowVoltageBatteryCountLimits" },
		{"trigger": "nAvgBatteryLevel", "contents": "nAvgBatteryLevel" },
		{"trigger": "nBackupBatteryLevel", "contents": "nBackupBatteryLevel" },
		{"trigger": "nBatteryLevel", "contents": "nBatteryLevel" },
		{"trigger": "nImmediateBatteryLevel", "contents": "nImmediateBatteryLevel" },
		{"trigger": "nPowerDownDelayMinutes", "contents": "nPowerDownDelayMinutes" },
		{"trigger": "nPowerDownDelayMinutesDefault", "contents": "nPowerDownDelayMinutesDefault" },
		{"trigger": "nShutdownVoltage", "contents": "nShutdownVoltage" },
		{"trigger": "nAvgBatteryLevel", "contents": "nAvgBatteryLevel" },
		{"trigger": "BackupBatteryLevel", "contents": "BackupBatteryLevel" },
		{"trigger": "nImmediateBatteryLevel", "contents": "nImmediateBatteryLevel" },
		{"trigger": "btConnect", "contents": "btConnect(nPort,sFriendlyName)" },
		{"trigger": "btDisconnect", "contents": "btDisconnect(${1:nPort})" },
		{"trigger": "btDisconnectAll", "contents": "btDisconnectAll()" },
		{"trigger": "btFactoryReset", "contents": "btFactoryReset()" },
		{"trigger": "btGetMyContactsEntry", "contents": "btGetMyContactsEntry(${1:nIndexInList},${2:nInfo})" },
		{"trigger": "btRemoveDevice", "contents": "btRemoveDevice(${1:sFriendlyName})" },
		{"trigger": "btRequestLinkQuality", "contents": "btRequestLinkQuality(${1:nPort})" },
		{"trigger": "btSearch", "contents": "btSearch($1)" },
		{"trigger": "btStopSearch", "contents": "btStopSearch($1)" },
		{"trigger": "cCmdBTCheckStatus", "contents": "cCmdBTCheckStatus(${1:nStream})" },
		{"trigger": "cCmdBTPurgeRcvBuffer", "contents": "cCmdBTPurgeRcvBuffer()" },
		{"trigger": "cCmdMessageAddToQueue", "contents": "cCmdMessageAddToQueue(${1:nQueueID,pData,nLength})" },
		{"trigger": "cCmdMessageGetSize", "contents": "cCmdMessageGetSize(${1:nQueueID})" },
		{"trigger": "cCmdMessageRead", "contents": "cCmdMessageRead(${1:pData,nLengthToRead,nQueueID})" },
		{"trigger": "cCmdMessageWriteToBluetooth", "contents": "cCmdMessageWriteToBluetooth(${1:nStream,pData,nLength,nQueueID})" },
		{"trigger": "cCmdMessageWriteToBluetooth", "contents": "cCmdMessageWriteToBluetooth(${1:pData,nLength,nQueueID})" },
		{"trigger": "cCmdRawSendToBluetooth", "contents": "cCmdRawSendToBluetooth(${1:nStream,pData,nLength})" },
		{"trigger": "cCmdRawSendToBluetooth", "contents": "cCmdRawSendToBluetooth(${1:pData,nLength})" },
		{"trigger": "getBTAddress", "contents": "getBTAddress(${1:btAddr})" },
		{"trigger": "getDefaultPIN", "contents": "getDefaultPIN(${1:passCode})" },
		{"trigger": "getDeviceAddr", "contents": "getDeviceAddr(${1:nResult,nHandle,sAddr})" },
		{"trigger": "getDeviceClass", "contents": "getDeviceClass(${1:nHandle,sCOD})" },
		{"trigger": "getDeviceName", "contents": "getDeviceName(${1:nHandle,sName})" },
		{"trigger": "getDeviceStatus", "contents": "getDeviceStatus(${1:nHandle,nStatus})" },
		{"trigger": "getFirstDevice", "contents": "getFirstDevice(${1:nResult,nHandle})" },
		{"trigger": "getFriendlyName", "contents": "getFriendlyName(${1:sName})" },
		{"trigger": "getNextDevice", "contents": "getNextDevice(${1:nResult,nHandle})" },
		{"trigger": "getPortName", "contents": "getPortName(${1:nResult,nPort,sPortName})" },
		{"trigger": "getSessionPIN", "contents": "getSessionPIN(${1:passCode})" },
		{"trigger": "nxtReadRawBluetooth", "contents": "nxtReadRawBluetooth(${1:pData,nMaxBufferSize})" },
		{"trigger": "nxtWriteRawBluetooth", "contents": "nxtWriteRawBluetooth(${1:nStream,pData,nLength})" },
		{"trigger": "nxtWriteRawBluetooth", "contents": "nxtWriteRawBluetooth(${1:pData,nLength})" },
		{"trigger": "resetSessionPIN", "contents": "resetSessionPIN()" },
		{"trigger": "setBluetoothOff", "contents": "setBluetoothOff()" },
		{"trigger": "setBluetoothOn", "contents": "setBluetoothOn()" },
		{"trigger": "setBluetoothRawDataMode", "contents": "setBluetoothRawDataMode()" },
		{"trigger": "setBluetoothVisibility", "contents": "setBluetoothVisibility(${1:bBluetoothVisible})" },
		{"trigger": "setBluetoothVisibility", "contents": "setBluetoothVisibility(${1:nResult,bBluetoothVisible})" },
		{"trigger": "setDefaultPIN", "contents": "setDefaultPIN(${1:nResult,sPIN})" },
		{"trigger": "setDefaultPIN", "contents": "setDefaultPIN(${1:passCode})" },
		{"trigger": "setFriendlyName", "contents": "setFriendlyName(${1:nResult,sFriendlyName})" },
		{"trigger": "setFriendlyName", "contents": "setFriendlyName(${1:sFriendlyName})" },
		{"trigger": "setSessionPIN", "contents": "setSessionPIN(${1:passCode})" },
		{"trigger": "transferFile", "contents": "transferFile(${1:nPort,sFileName})" },
		{"trigger": "bBTBusy", "contents": "bBTBusy" },
		{"trigger": "bBTDebugTrace", "contents": "bBTDebugTrace" },
		{"trigger": "bBTHasProgressSounds", "contents": "bBTHasProgressSounds" },
		{"trigger": "bBTOptimizePerformance", "contents": "bBTOptimizePerformance" },
		{"trigger": "bBTRawMode", "contents": "bBTRawMode" },
		{"trigger": "bBTSkipPswdPrompt", "contents": "bBTSkipPswdPrompt" },
		{"trigger": "bBTVisble", "contents": "bBTVisble" },
		{"trigger": "kDefaultBTQueue", "contents": "kDefaultBTQueue" },
		{"trigger": "kMaxMyContacts", "contents": "kMaxMyContacts" },
		{"trigger": "nBluetoothCmdStatus", "contents": "nBluetoothCmdStatus" },
		{"trigger": "nBluetoothState", "contents": "nBluetoothState" },
		{"trigger": "nBTAvailOutSize", "contents": "nBTAvailOutSize" },
		{"trigger": "nBTCurrentStreamIndex", "contents": "nBTCurrentStreamIndex" },
		{"trigger": "nBTLinkQuality", "contents": "nBTLinkQuality[$1]" },
		{"trigger": "nBTStreamSwitchDelay", "contents": "nBTStreamSwitchDelay" },
		{"trigger": "nLastBTCommand", "contents": "nLastBTCommand" },
		{"trigger": "kNoButton", "contents": "kNoButton" },
		{"trigger": "nNxtButtonPressed", "contents": "nNxtButtonPressed" },
		{"trigger": "nNxtButtonTask", "contents": "nNxtButtonTask" },
		{"trigger": "nNxtButtonTransition", "contents": "nNxtButtonTransition" },
		{"trigger": "nNxtExitClicks", "contents": "nNxtExitClicks" },
		{"trigger": "nNxtRemoteButton", "contents": "nNxtRemoteButton" },
		{"trigger": "GetTrackingParms", "contents": "GetTrackingParms(${1:myData})" },
		{"trigger": "ResetCameraConfigurationToDefault", "contents": "ResetCameraConfigurationToDefault()" },
		{"trigger": "SetTrackingParms", "contents": "SetTrackingParms(${1:config})" },
		{"trigger": "StartCamera", "contents": "StartCamera()" },
		{"trigger": "StopCamera", "contents": "StopCamera()" },
		{"trigger": "nCameraConfidence", "contents": "nCameraConfidence" },
		{"trigger": "nCameraHorizontal", "contents": "nCameraHorizontal" },
		{"trigger": "nCameraStatus", "contents": "nCameraStatus" },
		{"trigger": "nCameraTrackingPackets", "contents": "nCameraTrackingPackets" },
		{"trigger": "nCameraVertical", "contents": "nCameraVertical" },
		{"trigger": "trackingData", "contents": "trackingData" },
		{"trigger": "AddToDatalog", "contents": "AddToDatalog(${1:data})" },
		{"trigger": "AddToDatalog", "contents": "AddToDatalog(${1:nDataPtIndex,nDataValue})" },
		{"trigger": "AddToDatalogEnhanced", "contents": "AddToDatalogEnhanced(${1:nFlags,data})" },
		{"trigger": "CreateDatalog", "contents": "CreateDatalog(${1:size})" },
		{"trigger": "SaveNxtDatalog", "contents": "SaveNxtDatalog()" },
		{"trigger": "ddToDatalog", "contents": "ddToDatalog(${1:nDataPtIndex,data})" },
		{"trigger": "bHideDataFiles", "contents": "bHideDataFiles" },
		{"trigger": "nDatalogSize", "contents": "nDatalogSize" },
		{"trigger": "nMaxDataFiles", "contents": "nMaxDataFiles" },
		{"trigger": "nMaxDataFileSize", "contents": "nMaxDataFileSize" },
		{"trigger": "nUsedDatalogBytes", "contents": "nUsedDatalogBytes" },
		{"trigger": "ASSERT", "contents": "ASSERT(${1:assertVar})" },
		{"trigger": "debugPrint", "contents": "debugPrint(${1:format,parm1,parm2})" },
		{"trigger": "debugPrintLine", "contents": "debugPrintLine(${1:format,parm1,parm2})" },
		{"trigger": "getAvailSpaceInDebugStream", "contents": "getAvailSpaceInDebugStream()" },
		{"trigger": "VERIFY", "contents": "VERIFY(${1:assertVar})" },
		{"trigger": "writeDebugStream", "contents": "writeDebugStream(${1:sFormatString})" },
		{"trigger": "writeDebugStream", "contents": "writeDebugStream(${1:sFormatString})" },
		{"trigger": "writeDebugStream", "contents": "writeDebugStream(${1:pzFormatString})" },
		{"trigger": "writeDebugStreamLine", "contents": "writeDebugStreamLine(${1:sFormatString})" },
		{"trigger": "writeDebugStreamLine", "contents": "writeDebugStreamLine(${1:sFormatString})" },
		{"trigger": "writeDebugStreamLine", "contents": "writeDebugStreamLine(${1:pzFormatString})" },
		{"trigger": "clearDebugStream", "contents": "clearDebugStream();" },
		{"trigger": "bFloatConversionErrors", "contents": "bFloatConversionErrors" },
		{"trigger": "clearLCDLine", "contents": "clearLCDLine(${1:nLine});" },
		{"trigger": "displayFileName", "contents": "displayFileName(${1:nLine,nSlot});" },
		{"trigger": "displayLCDCenteredString", "contents": "displayLCDCenteredString(${1:nLine,sString});" },
		{"trigger": "displayLCDCenteredString", "contents": "displayLCDCenteredString(${1:nLine,pzString});" },
		{"trigger": "displayLCDChar", "contents": "displayLCDChar(${1:nLine,nPos,cChar});" },
		{"trigger": "displayLCDNumber", "contents": "displayLCDNumber(${1:nLine,nPos,nValue,nPrecision});" },
		{"trigger": "setLCDPosition", "contents": "setLCDPosition(${1:nLine,nPos});" },
		{"trigger": "displayLCDPos", "contents": "displayLCDPos(${1:nLine,nPos});" },
		{"trigger": "displayLCDString", "contents": "displayLCDString(${1:nLine,nPos,sString});" },
		{"trigger": "displayLCDString", "contents": "displayLCDString(${1:nLine,nPos,pzString});" },
		{"trigger": "displayNextLCDChar", "contents": "displayNextLCDChar(${1:cChar});" },
		{"trigger": "displayNextLCDNumber", "contents": "displayNextLCDNumber(${1:nValue,nPrecision});" },
		{"trigger": "displayNextLCDString", "contents": "displayNextLCDString(${1:sString});" },
		{"trigger": "displayNextLCDString", "contents": "displayNextLCDString(${1:pzString});" },
		{"trigger": "drawInvertEllipse", "contents": "drawInvertEllipse(${1:Left,Top,Right,Bottom})" },
		{"trigger": "drawInvertRect", "contents": "drawInvertRect(${1:Left,Top,Right,Bottom})" },
		{"trigger": "eraseDisplay", "contents": "eraseDisplay()" },
		{"trigger": "nxtClearPixel", "contents": "nxtClearPixel(${1:xPos,yPos})" },
		{"trigger": "nxtDisplayBigStringAt", "contents": "nxtDisplayBigStringAt(${1:xPos,yPos,pChar,...})" },
		{"trigger": "nxtDisplayBigStringAt", "contents": "nxtDisplayBigStringAt(${1:xPos,yPos,sFormatString,...})" },
		{"trigger": "nxtDisplayBigStringAt", "contents": "nxtDisplayBigStringAt(${1:xPos,yPos,sString})" },
		{"trigger": "nxtDisplayBigTextLine", "contents": "nxtDisplayBigTextLine(${1:nLineNumber,pChar,...})" },
		{"trigger": "nxtDisplayBigTextLine", "contents": "nxtDisplayBigTextLine(${1:nLineNumber,sFormatString,...})" },
		{"trigger": "nxtDisplayBigTextLine", "contents": "nxtDisplayBigTextLine(${1:nLineNumber,sString})" },
		{"trigger": "nxtDisplayCenteredBigTextLine", "contents": "nxtDisplayCenteredBigTextLine(${1:nLineNumber,pChar,...})" },
		{"trigger": "nxtDisplayCenteredBigTextLine", "contents": "nxtDisplayCenteredBigTextLine(${1:nLineNumber,sFormatString,...})" },
		{"trigger": "nxtDisplayCenteredBigTextLine", "contents": "nxtDisplayCenteredBigTextLine(${1:nLineNumber,sString})" },
		{"trigger": "nxtDisplayCenteredTextLine", "contents": "nxtDisplayCenteredTextLine(${1:nLineNumber,pChar,...})" },
		{"trigger": "nxtDisplayCenteredTextLine", "contents": "nxtDisplayCenteredTextLine(${1:nLineNumber,sFormatString,...})" },
		{"trigger": "nxtDisplayCenteredTextLine", "contents": "nxtDisplayCenteredTextLine(${1:nLineNumber,sString})" },
		{"trigger": "nxtDisplayClearTextLine", "contents": "nxtDisplayClearTextLine(${1:nLineNumber})" },
		{"trigger": "nxtDisplayIconFile", "contents": "nxtDisplayIconFile(${1:xPos,yPos,sFileName})" },
		{"trigger": "nxtDisplayRICFile", "contents": "nxtDisplayRICFile(${1:nleft,nBottom,sFileName})" },
		{"trigger": "nxtDisplayString", "contents": "nxtDisplayString(${1:nLineNumber,pChar,...})" },
		{"trigger": "nxtDisplayString", "contents": "nxtDisplayString(${1:nLineNumber,sFormatString,...})" },
		{"trigger": "nxtDisplayStringAt", "contents": "nxtDisplayStringAt(${1:xPos,yPos,pChar,...})" },
		{"trigger": "nxtDisplayStringAt", "contents": "nxtDisplayStringAt(${1:xPos,yPos,sFormatString,...})" },
		{"trigger": "nxtDisplayStringAt", "contents": "nxtDisplayStringAt(${1:xPos,yPos,sString})" },
		{"trigger": "nxtDisplayTextLine", "contents": "nxtDisplayTextLine(${1:nLineNumber,pChar,...})" },
		{"trigger": "nxtDisplayTextLine", "contents": "nxtDisplayTextLine(${1:nLineNumber,sFormatString,...})" },
		{"trigger": "nxtDisplayTextLine", "contents": "nxtDisplayTextLine(${1:nLineNumber,sString})" },
		{"trigger": "nxtDrawCircle", "contents": "nxtDrawCircle(${1:Left,Top,Diameter})" },
		{"trigger": "nxtDrawEllipse", "contents": "nxtDrawEllipse(${1:Left,Top,Right,Bottom})" },
		{"trigger": "nxtDrawLine", "contents": "nxtDrawLine(${1:xPos,yPos,xPosTo,yPosTo})" },
		{"trigger": "nxtDrawRect", "contents": "nxtDrawRect(${1:Left,Top,Right,Bottom})" },
		{"trigger": "nxtEraseEllipse", "contents": "nxtEraseEllipse(${1:Left,Top,Right,Bottom})" },
		{"trigger": "nxtEraseLine", "contents": "nxtEraseLine(${1:xPos,yPos,xPosTo,yPosTo})" },
		{"trigger": "nxtEraseRect", "contents": "nxtEraseRect(${1:Left,Top,Right,Bottom})" },
		{"trigger": "nxtFillEllipse", "contents": "nxtFillEllipse(${1:Left,Top,Right,Bottom})" },
		{"trigger": "nxtFillRect", "contents": "nxtFillRect(${1:Left,Top,Right,Bottom})" },
		{"trigger": "nxtInvertLine", "contents": "nxtInvertLine(${1:xPos,yPos,xPosTo,yPosTo})" },
		{"trigger": "nxtScrollText", "contents": "nxtScrollText(${1:pChar})" },
		{"trigger": "nxtScrollText", "contents": "nxtScrollText(${1:sFormatString})" },
		{"trigger": "nxtSetPixel", "contents": "nxtSetPixel(${1:xPos,yPos})" },
		{"trigger": "SetUserDisplay", "contents": "SetUserDisplay(${1:nVariable,nPrecision})" },
		{"trigger": "bLCDBacklight", "contents": "bLCDBacklight" },
		{"trigger": "bNxtLCDStatusDisplay", "contents": "bNxtLCDStatusDisplay" },
		{"trigger": "nLCDButtons", "contents": "nLCDButtons" },
		{"trigger": "nLCDContrast", "contents": "nLCDContrast" },
		{"trigger": "nLCDContrastDefault", "contents": "nLCDContrastDefault" },
		{"trigger": "nLCDRefreshCycles", "contents": "nLCDRefreshCycles" },
		{"trigger": "nLCDRefreshRate", "contents": "nLCDRefreshRate" },
		{"trigger": "nOnBrickProgrammingStep", "contents": "nOnBrickProgrammingStep" },
		{"trigger": "nViewState", "contents": "nViewState" },
		{"trigger": "nViewStateNXT", "contents": "nViewStateNXT" },
		{"trigger": "nWatchFormat", "contents": "nWatchFormat" },
		{"trigger": "CalibrateEvent", "contents": "CalibrateEvent(${1:nEventNumber,lowerThreshold,upperThreshold,hysteresis})" },
		{"trigger": "ClearAllEvents", "contents": "ClearAllEvents" },
		{"trigger": "ClearEvent", "contents": "ClearEvent(${1:nEventNumber})" },
		{"trigger": "DirectEvent", "contents": "DirectEvent(${1:nEventMask})" },
		{"trigger": "EVENT_MASK", "contents": "EVENT_MASK(${1:nEvent})" },
		{"trigger": "ResetEvent", "contents": "ResetEvent(${1:nEventNumber})" },
		{"trigger": "SetEvent", "contents": "SetEvent(${1:nEvent,nSensor,nType})" },
		{"trigger": "SetEvent", "contents": "SetEvent(${1:nEvent,nTimer,nType})" },
		{"trigger": "SetPriority", "contents": "SetPriority(${1:nTaskNumber,nPriority})" },
		{"trigger": "SignalEvent", "contents": "SignalEvent(${1:nEventNumber})" },
		{"trigger": "EST_SENSOR", "contents": "EST_SENSOR[$1]" },
		{"trigger": "eventClicks", "contents": "eventClicks[$1]" },
		{"trigger": "eventCounts", "contents": "eventCounts[$1]" },
		{"trigger": "eventDuration", "contents": "eventDuration[$1]" },
		{"trigger": "eventHysteris", "contents": "eventHysteris[$1]" },
		{"trigger": "eventLower", "contents": "eventLower[$1]" },
		{"trigger": "eventState", "contents": "eventState[$1]" },
		{"trigger": "eventType", "contents": "eventType[$1]" },
		{"trigger": "eventUpper", "contents": "eventUpper[$1]" },
		{"trigger": "nAcquirePriority", "contents": "nAcquirePriority" },
		{"trigger": "taskEvents", "contents": "taskEvents[$1]" },
		{"trigger": "frcDigitalIODirection", "contents": "frcDigitalIODirection[$1]" },
		{"trigger": "frcDigitalIOValue", "contents": "frcDigitalIOValue[$1]" },
		{"trigger": "kNumbOfDigitalIO", "contents": "kNumbOfDigitalIO" },
		{"trigger": "frcRelay16", "contents": "frcRelay16[$1]" },
		{"trigger": "frcRelay", "contents": "frcRelay[$1]" },
		{"trigger": "kNumbOfFRCRelays", "contents": "kNumbOfFRCRelays" },
		{"trigger": "kNumbOfFRCSingleRelays", "contents": "kNumbOfFRCSingleRelays" },
		{"trigger": "bValidFile", "contents": "bValidFile(${1:nFileIndex})" },
		{"trigger": "Close", "contents": "Close(${1:hFileHandle,nIoResult})" },
		{"trigger": "Delete", "contents": "Delete(${1:sFileName,nIoResult});" },
		{"trigger": "Delete", "contents": "Delete(${1:pzFileName,nIoResult});" },
		{"trigger": "deleteFile", "contents": "deleteFile(${1:nFileIndex});" },
		{"trigger": "FindFirstFile", "contents": "FindFirstFile(${1:hFileHandle,nIoResult,sSearch,sFileName,nFilesize});" },
		{"trigger": "FindFirstFile", "contents": "FindFirstFile(${1:hFileHandle,nIoResult,pzSearch,sFileName,nFilesize});" },
		{"trigger": "FindNextFile", "contents": "FindNextFile(${1:hFileHandle,nIoResult,sFileName,nFilesizev});"},
		{"trigger": "OpenRead", "contents": "OpenRead(${1:hFileHandle,nIoResult,sFileName,nFileSize});" },
		{"trigger": "OpenRead", "contents": "OpenRead(${1:hFileHandle,nIoResult,pzFileName,nFileSize});" },
		{"trigger": "OpenWrite", "contents": "OpenWrite(${1:hFileHandle,nIoResult,sFileName,nFileSize});" },
		{"trigger": "OpenWrite", "contents": "OpenWrite(${1:hFileHandle,nIoResult,pzFileName,nFileSize});" },
		{"trigger": "ReadByte", "contents": "ReadByte(${1:hFileHandle,nIoResult,nParm})" },
		{"trigger": "ReadFloat", "contents": "ReadFloat(${1:hFileHandle,nIoResult,fParm})" },
		{"trigger": "ReadLong", "contents": "ReadLong(${1:hFileHandle,nIoResult,nParm})" },
		{"trigger": "ReadShort", "contents": "ReadShort(${1:hFileHandle,nIoResult,nParm})" },
		{"trigger": "Rename", "contents": "Rename(${1:pzFileName,nIoResult,pzOriginalFileName});" },
		{"trigger": "Rename", "contents": "Rename(${1:sFileName,nIoResult,sOriginalFileName});" },
		{"trigger": "WriteByte", "contents": "WriteByte(${1:hFileHandle,nIoResult,nParm})" },
		{"trigger": "WriteFloat", "contents": "WriteFloat(${1:hFileHandle,nIoResult,fParm})" },
		{"trigger": "WriteLong", "contents": "WriteLong(${1:hFileHandle,nIoResult,nParm})" },
		{"trigger": "WriteShort", "contents": "WriteShort(${1:hFileHandle,nIoResult,nParm})" },
		{"trigger": "WriteString", "contents": "WriteString(${1:hFileHandle,nIoResult,sParm})" },
		{"trigger": "WriteString", "contents": "WriteString(${1:hFileHandle,nIoResult,pzParm});" },
		{"trigger": "WriteText", "contents": "WriteText(${1:hFileHandle,nIoResult,sParm});" },
		{"trigger": "WriteText", "contents": "WriteText(${1:hFileHandle,nIoResult,pzParm});" },
		{"trigger": "nAvailFlash", "contents": "nAvailFlash" },
		{"trigger": "FTCMotor", "contents": "FTCMotor[$1]" },
		{"trigger": "FTCServoControlEnabled", "contents": "FTCServoControlEnabled" },
		{"trigger": "FTCServoUsePrototype", "contents": "FTCServoUsePrototype" },
		{"trigger": "muxBattery", "contents": "muxBattery" },
		{"trigger": "muxLowBatteryShutdown", "contents": "muxLowBatteryShutdown" },
		{"trigger": "nxtGetAvailHSBytes", "contents": "nxtGetAvailHSBytes()" },
		{"trigger": "nxtReadRawHS", "contents": "nxtReadRawHS(${1:pData,nMaxBufferSize})" },
		{"trigger": "nxtSetHSBaudRate", "contents": "nxtSetHSBaudRate(${1:nBaudRate})" },
		{"trigger": "nxtWriteRawHS", "contents": "nxtWriteRawHS(${1:pData,nLength,nAddress})" },
		{"trigger": "nxtWriteCharRawHS", "contents": "nxtWriteCharRawHS(${1:nSingleChar,nAddress});" },
		{"trigger": "kDefaultBaudRate", "contents": "kDefaultBaudRate" },
		{"trigger": "nxtHS_Mode", "contents": "nxtHS_Mode" },
		{"trigger": "nxtHS_Status", "contents": "nxtHS_Status" },
		{"trigger": "pragmaautonomousDuration", "contents": "#pragmaautonomousDuration(${1:<nDuration>})" },
		{"trigger": "pragmacompetitionControl", "contents": "#pragmacompetitionControl(${1:<state>})" },
		{"trigger": "pragmauserControlDuration", "contents": "#pragmauserControlDuration(${1:<nDuration>})" },
		{"trigger": "bIfiAutonomousMode", "contents": "bIfiAutonomousMode" },
		{"trigger": "bIfiAutonomousPhase", "contents": "bIfiAutonomousPhase" },
		{"trigger": "bIfiPwmOverride", "contents": "bIfiPwmOverride" },
		{"trigger": "bIfiRobotDisabled", "contents": "bIfiRobotDisabled" },
		{"trigger": "bVexAutonomousMode", "contents": "bVexAutonomousMode" },
		{"trigger": "nCurrCortexProgramType", "contents": "nCurrCortexProgramType" },
		{"trigger": "nIfiCompetitionState", "contents": "nIfiCompetitionState" },
		{"trigger": "nNextCortexProgramType", "contents": "nNextCortexProgramType" },
		{"trigger": "nVEXDurationAutonomous", "contents": "nVEXDurationAutonomous" },
		{"trigger": "nVEXDurationUserControl", "contents": "nVEXDurationUserControl" },
		{"trigger": "nVexRCReceiveState", "contents": "nVexRCReceiveState" },
		{"trigger": "bIfiAutonomousModeBySlave", "contents": "bIfiAutonomousModeBySlave" },
		{"trigger": "bVEXNETActive", "contents": "bVEXNETActive" },
		{"trigger": "frcOIJoystickButtons", "contents": "frcOIJoystickButtons[$1]" },
		{"trigger": "frcOILEDs", "contents": "frcOILEDs[$1]" },
		{"trigger": "frcRF", "contents": "frcRF[$1]" },
		{"trigger": "kNumbOfFrcRFJoysticks", "contents": "kNumbOfFrcRFJoysticks" },
		{"trigger": "kNumbOfOIJoystickButtons", "contents": "kNumbOfOIJoystickButtons" },
		{"trigger": "kNumbOfOISensors", "contents": "kNumbOfOISensors" },
		{"trigger": "kNumbOfVexPSJoysticks", "contents": "kNumbOfVexPSJoysticks" },
		{"trigger": "kNumbOfVexRFJoysticks", "contents": "kNumbOfVexRFJoysticks" },
		{"trigger": "nIfiSPIMsgCounts", "contents": "nIfiSPIMsgCounts" },
		{"trigger": "nVexSPIMsgCounts", "contents": "nVexSPIMsgCounts" },
		{"trigger": "vexPSC", "contents": "vexPSC[$1]" },
		{"trigger": "vexRT", "contents": "vexRT[$1]" },
		{"trigger": "nxtReadIOMap", "contents": "nxtReadIOMap(${1:sIOMapName,nIoResult,pBuffer,nOffset,nNumbOfBytes});" },
		{"trigger": "nxtWriteIOMap", "contents": "nxtWriteIOMap(${1:sIOMapName,nIoResult,pBuffer,nOffset,nNumbOfBytes});" },
		{"trigger": "abs", "contents": "abs(${1:input})" },
		{"trigger": "acos", "contents": "acos(${1:Cosine})" },
		{"trigger": "asin", "contents": "asin(${1:Sine})" },
		{"trigger": "atan", "contents": "atan(${1:Tangent})" },
		{"trigger": "atof", "contents": "atof(${1:pzSrce})" },
		{"trigger": "atof", "contents": "atof(${1:sSrce})" },
		{"trigger": "atoi", "contents": "atoi(${1:pzSrce})" },
		{"trigger": "atoi", "contents": "atoi(${1:sSrce})" },
		{"trigger": "ceil", "contents": "ceil(${1:input})" },
		{"trigger": "cos", "contents": "cos(${1:fRadians})" },
		{"trigger": "cosDegrees", "contents": "cosDegrees(${1:degrees})" },
		{"trigger": "degreesToRadians", "contents": "degreesToRadians(${1:Degrees})" },
		{"trigger": "exp", "contents": "exp(${1:input})" },
		{"trigger": "floor", "contents": "floor(${1:input})" },
		{"trigger": "log", "contents": "log(${1:input})" },
		{"trigger": "log10", "contents": "log10(${1:input})" },
		{"trigger": "pow", "contents": "pow(${1:base,exponent})" },
		{"trigger": "radiansToDegrees", "contents": "radiansToDegrees(${1:fRadians})" },
		{"trigger": "sgn", "contents": "sgn(${1:input})" },
		{"trigger": "sin", "contents": "sin(${1:fRadians})" },
		{"trigger": "sinDegrees", "contents": "sinDegrees(${1:degrees})" },
		{"trigger": "sqrt", "contents": "sqrt(${1:input})" },
		{"trigger": "srand", "contents": "srand(${1:seed})" },
		{"trigger": "srand", "contents": "srand(${1:nSeedValue});" },
		{"trigger": "atan2", "contents": "atan2(${1:Y,X});" },
		{"trigger": "round", "contents": "round(${1:input});" },
		{"trigger": "PI", "contents": "PI" },
		{"trigger": "random", "contents": "random(${1:range})" },
		{"trigger": "random", "contents": "random[$1]" },
		{"trigger": "rand", "contents": "rand()" },
		{"trigger": "randlong", "contents": "randlong()" },
		{"trigger": "bMsgAvailable", "contents": "bMsgAvailable()" },
		{"trigger": "bQueuedMsgAvailable", "contents": "bQueuedMsgAvailable()" },
		{"trigger": "ClearMessage", "contents": "ClearMessage()" },
		{"trigger": "getMessage", "contents": "getMessage(${1:nNodeIndex,pData,nMaxLength,nActualLength})" },
		{"trigger": "getMyNodeIndex", "contents": "getMyNodeIndex()" },
		{"trigger": "getNetworkingStartupFinished", "contents": "getNetworkingStartupFinished()" },
		{"trigger": "getNetworkingStatus", "contents": "getNetworkingStatus()" },
		{"trigger": "resetNetworkDefinition", "contents": "resetNetworkDefinition()" },
		{"trigger": "sendMessage", "contents": "sendMessage(${1:nMessageID})" },
		{"trigger": "sendMessage", "contents": "sendMessage(${1:nNodeIndex,pData,nLength})" },
		{"trigger": "sendMessageWithParm", "contents": "sendMessageWithParm(${1:nMessageID,nParm1,nParm2})" },
		{"trigger": "sendMessageWithWait", "contents": "sendMessageWithWait(${1:nNodeIndex,pData,nLength})" },
		{"trigger": "setMessage", "contents": "setMessage(${1:nMessage})" },
		{"trigger": "setMessage1", "contents": "setMessage1()" },
		{"trigger": "setMessage2WordParm", "contents": "setMessage2WordParm(${1:nMessage,nParm1,nParm2})" },
		{"trigger": "setMessage3WordParm", "contents": "setMessage3WordParm(${1:nMessage,nParm1,nParm2,nParm3})" },
		{"trigger": "setMessageByteParm", "contents": "setMessageByteParm(${1:nMessage,nParm})" },
		{"trigger": "setMessageWithParm", "contents": "setMessageWithParm(${1:nMessage,nParm})" },
		{"trigger": "setMessageWordParm", "contents": "setMessageWordParm(${1:nMessage,nParm})" },
		{"trigger": "message", "contents": "message" },
		{"trigger": "messageParm", "contents": "messageParm[$1]" },
		{"trigger": "getFirmwareDate", "contents": "getFirmwareDate(${1:sDate})" },
		{"trigger": "getPCJoystickSettings", "contents": "getPCJoystickSettings(${1:joystick});" },
		{"trigger": "memcpy", "contents": "memcpy(${1:pToBuffer,pFromBuffer,nNumbOfBytes});" },
		{"trigger": "memmove", "contents": "memmove(${1:pToBuffer,pFromBuffer,nNumbOfBytes});" },
		{"trigger": "memcmp", "contents": "memcmp(${1:pToBuffer,pFromBuffer,nNumbOfBytes});" },
		{"trigger": "memset", "contents": "memset(${1:pToBuffer,nValue,nNumbOfBytes});" },
		{"trigger": "bFastSonarSensor", "contents": "bFastSonarSensor" },
		{"trigger": "bRobolab", "contents": "bRobolab" },
		{"trigger": "bVexBlackEye", "contents": "bVexBlackEye" },
		{"trigger": "FALSE", "contents": "FALSE" },
		{"trigger": "nIfiSPIMsgCounts", "contents": "nIfiSPIMsgCounts" },
		{"trigger": "nMotorBeingTrace", "contents": "nMotorBeingTrace" },
		{"trigger": "nVexMasterVersion", "contents": "nVexMasterVersion" },
		{"trigger": "TRUE", "contents": "TRUE" },
		{"trigger": "version", "contents": "version" },
		{"trigger": "changeSpeedRampingParms", "contents": "changeSpeedRampingParms(${1:nMotorIndex,nMinimumRampStartUpSpeed,nRampStartupChangeRate,nMinimumRampDownSpeed,nRampDownChangeRate});" },
		{"trigger": "getEncoderForMotor", "contents": "getEncoderForMotor(${1:nMotorIndex})" },
		{"trigger": "mapEncoderToMotor", "contents": "mapEncoderToMotor(${1:nMotorIndex,nSensorIndex});" },
		{"trigger": "bFloatDuringInactiveMotorPWM", "contents": "bFloatDuringInactiveMotorPWM" },
		{"trigger": "bMotorReflected", "contents": "bMotorReflected[$1]" },
		{"trigger": "motorA", "contents": "motorA" },
		{"trigger": "motorB", "contents": "motorB" },
		{"trigger": "motorC", "contents": "motorC" },
		{"trigger": "motorPWMLevel", "contents": "motorPWMLevel[$1]" },
		{"trigger": "motor", "contents": "motor[$1]" },
		{"trigger": "motor", "contents": "motor[$1]" },
		{"trigger": "mtr_S1_C1_1", "contents": "mtr_S1_C1_1" },
		{"trigger": "mtr_S1_C1_2", "contents": "mtr_S1_C1_2" },
		{"trigger": "mtr_S1_C2_1", "contents": "mtr_S1_C2_1" },
		{"trigger": "mtr_S1_C2_2", "contents": "mtr_S1_C2_2" },
		{"trigger": "mtr_S1_C3_1", "contents": "mtr_S1_C3_1" },
		{"trigger": "mtr_S1_C3_2", "contents": "mtr_S1_C3_2" },
		{"trigger": "mtr_S1_C4_1", "contents": "mtr_S1_C4_1" },
		{"trigger": "mtr_S1_C4_2", "contents": "mtr_S1_C4_2" },
		{"trigger": "mtr_S2_C1_1", "contents": "mtr_S2_C1_1" },
		{"trigger": "mtr_S2_C1_2", "contents": "mtr_S2_C1_2" },
		{"trigger": "mtr_S2_C2_1", "contents": "mtr_S2_C2_1" },
		{"trigger": "mtr_S2_C2_2", "contents": "mtr_S2_C2_2" },
		{"trigger": "nIfiPwmOwner", "contents": "nIfiPwmOwner" },
		{"trigger": "nMaxRegulatedSpeed", "contents": "nMaxRegulatedSpeed" },
		{"trigger": "nMaxRegulatedSpeed12V", "contents": "nMaxRegulatedSpeed12V" },
		{"trigger": "nMaxRegulatedSpeedNxt", "contents": "nMaxRegulatedSpeedNxt" },
		{"trigger": "nMotorEncoderTarget", "contents": "nMotorEncoderTarget[$1]" },
		{"trigger": "nMotorEncoder", "contents": "nMotorEncoder[$1]" },
		{"trigger": "nMotorPIDSpeedCtrl", "contents": "nMotorPIDSpeedCtrl[$1]" },
		{"trigger": "nMotorRunState", "contents": "nMotorRunState[$1]" },
		{"trigger": "nPidUpdateInterval", "contents": "nPidUpdateInterval" },
		{"trigger": "nPidUpdateInterval12V", "contents": "nPidUpdateInterval12V" },
		{"trigger": "nRegulatedSpeed", "contents": "nRegulatedSpeed" },
		{"trigger": "nSyncedMotors", "contents": "nSyncedMotors" },
		{"trigger": "nSyncedTurnRatio", "contents": "nSyncedTurnRatio" },
		{"trigger": "nVexPwmOwner", "contents": "nVexPwmOwner" },
		{"trigger": "port1", "contents": "port1" },
		{"trigger": "port10", "contents": "port10" },
		{"trigger": "port2", "contents": "port2" },
		{"trigger": "port3", "contents": "port3" },
		{"trigger": "port4", "contents": "port4" },
		{"trigger": "port5", "contents": "port5" },
		{"trigger": "port6", "contents": "port6" },
		{"trigger": "port7", "contents": "port7" },
		{"trigger": "port8", "contents": "port8" },
		{"trigger": "port9", "contents": "port9" },
		{"trigger": "motorType", "contents": "motorType[$1]" },
		{"trigger": "Ard", "contents": "Ard" },
		{"trigger": "FTC", "contents": "FTC" },
		{"trigger": "NOT_A_HANDLE", "contents": "NOT_A_HANDLE" },
		{"trigger": "NXT", "contents": "NXT" },
		{"trigger": "VEX", "contents": "VEX" },
		{"trigger": "_CUSTOM", "contents": "_CUSTOM" },
		{"trigger": "_DEBUG", "contents": "_DEBUG" },
		{"trigger": "_RELEASE", "contents": "_RELEASE" },
		{"trigger": "initializeRobot", "contents": "initializeRobot(${1:robot})" },
		{"trigger": "movesEnd", "contents": "movesEnd()" },
		{"trigger": "movesStart", "contents": "movesStart(${1:waitForRoutine,waitForParam})" },
		{"trigger": "setMoveMode", "contents": "setMoveMode(${1:timingMoveMode,typeMoveMode})" },
		{"trigger": "useStepThroughMode", "contents": "useStepThroughMode()" },
		{"trigger": "straightBackward", "contents": "straightBackward(${1:mRot,mRotPerSec})" },
		{"trigger": "straightForward", "contents": "straightForward(${1:mRot,mRotPerSec})" },
		{"trigger": "turnPointLeft", "contents": "turnPointLeft(${1:mRot,mRotPerSec})" },
		{"trigger": "turnPointRight", "contents": "turnPointRight(${1:mRot,mRotPerSec})" },
		{"trigger": "turnSwingLeftBackward", "contents": "turnSwingLeftBackward(${1:mRot,mRotPerSec})" },
		{"trigger": "turnSwingLeftForward", "contents": "turnSwingLeftForward(${1:mRot,mRotPerSec})" },
		{"trigger": "turnSwingRightBackward", "contents": "turnSwingRightBackward(${1:mRot,mRotPerSec})" },
		{"trigger": "turnSwingRightForward", "contents": "turnSwingRightForward(${1:mRot,mRotPerSec})" },
		{"trigger": "robotType", "contents": "robotType(${1:type});" },
		{"trigger": "robotType", "contents": "robotType(${1:type});" },
		{"trigger": "robotType", "contents": "robotType(${1:type});" },
		{"trigger": "robotType", "contents": "robotType(${1:type});" },
		{"trigger": "setServo", "contents": "setServo(${1:servoPort,position});" },
		{"trigger": "setServo", "contents": "setServo(${1:servoPort,position});" },
		{"trigger": "setServo", "contents": "setServo(${1:servoPort,position});" },
		{"trigger": "startMotor", "contents": "startMotor(${1:motorPort,speed});" },
		{"trigger": "startMotor", "contents": "startMotor(${1:motorPort,speed});" },
		{"trigger": "startMotor", "contents": "startMotor(${1:motorPort,speed});" },
		{"trigger": "startMotor", "contents": "startMotor(${1:motorPort,speed});" },
		{"trigger": "stopMotor", "contents": "stopMotor(${1:motorPort});" },
		{"trigger": "stopMotor", "contents": "stopMotor(${1:motorPort});" },
		{"trigger": "stopMotor", "contents": "stopMotor(${1:motorPort});" },
		{"trigger": "stopMotor", "contents": "stopMotor(${1:motorPort});" },
		{"trigger": "arcadeControl", "contents": "arcadeControl(${1:verticalJoystick,horizontalJoystick,threshold});" },
		{"trigger": "arcadeControl", "contents": "arcadeControl(${1:verticalJoystick,horizontalJoystick,threshold});" },
		{"trigger": "backward", "contents": "backward(${1:speed});" },
		{"trigger": "backward", "contents": "backward(${1:speed});" },
		{"trigger": "forward", "contents": "forward(${1:speed});" },
		{"trigger": "forward", "contents": "forward(${1:speed});" },
		{"trigger": "lineTrackForRotations", "contents": "lineTrackForRotations(${1:rotations,threshold,leftSensorPort,centerSensorPort,rightSensorPort});" },
		{"trigger": "lineTrackForRotations", "contents": "lineTrackForRotations(${1:rotations,threshold,sensorPort});" },
		{"trigger": "lineTrackForTime", "contents": "lineTrackForTime(${1:trackTime,threshold,leftSensorPort,centerSensorPort,rightSensorPort});" },
		{"trigger": "lineTrackForTime", "contents": "lineTrackForTime(${1:trackTime,threshold,sensorPort});" },
		{"trigger": "moveStraightForRotations", "contents": "moveStraightForRotations(${1:rotations,rightEncoderPort,leftEncoderPort});" },
		{"trigger": "moveStraightForTime", "contents": "moveStraightForTime(${1:seconds,rightEncoderPort,leftEncoderPort})" },
		{"trigger": "pointTurn", "contents": "pointTurn(${1:direction,speed});" },
		{"trigger": "pointTurn", "contents": "pointTurn(${1:direction,speed});" },
		{"trigger": "stop", "contents": "stop();" },
		{"trigger": "swingTurn", "contents": "swingTurn(${1:direction,speed});" },
		{"trigger": "tankControl", "contents": "tankControl(${1:rightJoystick,leftJoystick,threshold});" },
		{"trigger": "wait", "contents": "wait(${1:waitTime});" },
		{"trigger": "wait", "contents": "wait(${1:waitTime});" },
		{"trigger": "waitInMilliseconds", "contents": "waitInMilliseconds(${1:waitTime});" },
		{"trigger": "untilBump", "contents": "untilBump(${1:sensorPort,delayTimeMS});" },
		{"trigger": "untilButtonPress", "contents": "untilButtonPress(${1:button});" },
		{"trigger": "untilDark", "contents": "untilDark(${1:threshold,sensorPort});" },
		{"trigger": "untilEncoderCounts", "contents": "untilEncoderCounts(${1:distance,motorPort});" },
		{"trigger": "untilLight", "contents": "untilLight(${1:threshold,sensorPort});" },
		{"trigger": "untilPotentiometerGreaterThan", "contents": "untilPotentiometerGreaterThan(${1:position,sensorPort});" },
		{"trigger": "untilPotentiometerLessThan", "contents": "untilPotentiometerLessThan(${1:position,sensorPort});" },
		{"trigger": "untilRelease", "contents": "untilRelease(${1:sensorPort});" },
		{"trigger": "untilRotations", "contents": "untilRotations(${1:rotations,motorPort});" },
		{"trigger": "untilSonarGreaterThan", "contents": "untilSonarGreaterThan(${1:distance,sensorPort});" },
		{"trigger": "untilSonarLessThan", "contents": "untilSonarLessThan(${1:distance,sensorPort});" },
		{"trigger": "untilSoundGreaterThan", "contents": "untilSoundGreaterThan(${1:threshold,sensorPort});" },
		{"trigger": "untilSoundLessThan", "contents": "untilSoundLessThan(${1:threshold,sensorPort});" },
		{"trigger": "untilTouch", "contents": "untilTouch(${1:sensorPort});" },
		{"trigger": "untilCompassDegrees", "contents": "untilCompassDegrees(${1:degrees,buffer})" },
		{"trigger": "turnFlashlightOff", "contents": "turnFlashlightOff(${1:flashlightPort});" },
		{"trigger": "turnFlashlightOn", "contents": "turnFlashlightOn(${1:flashlightPort,brightness});" },
		{"trigger": "turnLEDOff", "contents": "turnLEDOff(${1:digitalPort});" },
		{"trigger": "turnLEDOn", "contents": "turnLEDOn(${1:digitalPort});" },
		{"trigger": "SemaphoreInitialize", "contents": "SemaphoreInitialize(${1:nSemaphore});" },
		{"trigger": "SemaphoreLock", "contents": "SemaphoreLock(${1:nSemaphore,waitTime});" },
		{"trigger": "SemaphoreUnlock", "contents": "SemaphoreUnlock(${1:nSemaphore});" },
		{"trigger": "ClearSensorValue", "contents": "ClearSensorValue(${1:nSensor})" },
		{"trigger": "getColorSensorData", "contents": "getColorSensorData(${1:nPort,nDataType,pData})" },
		{"trigger": "getColorSensorPegCounts", "contents": "getColorSensorPegCounts(${1:nPort,pData})" },
		{"trigger": "getSensorRawADValue", "contents": "getSensorRawADValue(${1:nPort})" },
		{"trigger": "SetSensorMode", "contents": "SetSensorMode(${1:nSensor,mode})" },
		{"trigger": "SetSensorType", "contents": "SetSensorType(${1:nSensor,type})" },
		{"trigger": "validColorSensor", "contents": "validColorSensor(${1:nPort})" },
		{"trigger": "shiftOut", "contents": "shiftOut(${1:dataPin,clockPin,bBitOrderLSBFirst,nValue,nDelay});" },
		{"trigger": "dgtl1", "contents": "dgtl1" },
		{"trigger": "dgtl10", "contents": "dgtl10" },
		{"trigger": "dgtl11", "contents": "dgtl11" },
		{"trigger": "dgtl12", "contents": "dgtl12" },
		{"trigger": "dgtl2", "contents": "dgtl2" },
		{"trigger": "dgtl3", "contents": "dgtl3" },
		{"trigger": "dgtl4", "contents": "dgtl4" },
		{"trigger": "dgtl5", "contents": "dgtl5" },
		{"trigger": "dgtl6", "contents": "dgtl6" },
		{"trigger": "dgtl7", "contents": "dgtl7" },
		{"trigger": "dgtl8", "contents": "dgtl8" },
		{"trigger": "dgtl9", "contents": "dgtl9" },
		{"trigger": "getSensorRawADValue", "contents": "getSensorRawADValue[$1]" },
		{"trigger": "I2C_1", "contents": "I2C_1" },
		{"trigger": "I2C_2", "contents": "I2C_2" },
		{"trigger": "I2C_3", "contents": "I2C_3" },
		{"trigger": "I2C_4", "contents": "I2C_4" },
		{"trigger": "I2C_5", "contents": "I2C_5" },
		{"trigger": "I2C_6", "contents": "I2C_6" },
		{"trigger": "I2C_7", "contents": "I2C_7" },
		{"trigger": "I2C_8", "contents": "I2C_8" },
		{"trigger": "ifiInterruptPorts", "contents": "ifiInterruptPorts[$1]" },
		{"trigger": "in1", "contents": "in1" },
		{"trigger": "in2", "contents": "in2" },
		{"trigger": "in3", "contents": "in3" },
		{"trigger": "in4", "contents": "in4" },
		{"trigger": "in5", "contents": "in5" },
		{"trigger": "in6", "contents": "in6" },
		{"trigger": "in7", "contents": "in7" },
		{"trigger": "in8", "contents": "in8" },
		{"trigger": "kLastBuiltinNxtSensor", "contents": "kLastBuiltinNxtSensor" },
		{"trigger": "kNumbOfPSJoysticks", "contents": "kNumbOfPSJoysticks" },
		{"trigger": "nAnalogChannelCount", "contents": "nAnalogChannelCount" },
		{"trigger": "nMissedSensorAtoDConversions", "contents": "nMissedSensorAtoDConversions" },
		{"trigger": "nPSControl", "contents": "nPSControl[$1]" },
		{"trigger": "nPSControl", "contents": "nPSControl[$1]" },
		{"trigger": "nVirtualSensorModeChanges", "contents": "nVirtualSensorModeChanges" },
		{"trigger": "nVirtualSensorTypeChanges", "contents": "nVirtualSensorTypeChanges" },
		{"trigger": "S1", "contents": "S1" },
		{"trigger": "S2", "contents": "S2" },
		{"trigger": "S3", "contents": "S3" },
		{"trigger": "S4", "contents": "S4" },
		{"trigger": "SensorBias", "contents": "SensorBias[$1]" },
		{"trigger": "SensorSmallBias", "contents": "SensorSmallBias[$1]" },
		{"trigger": "SensorBoolean", "contents": "SensorBoolean[$1]" },
		{"trigger": "SensorDeadBand", "contents": "SensorDeadBand[$1]" },
		{"trigger": "SensorFullCount", "contents": "SensorFullCount[$1]" },
		{"trigger": "SensorMode", "contents": "SensorMode[$1]" },
		{"trigger": "SensorRaw", "contents": "SensorRaw[$1]" },
		{"trigger": "SensorScale", "contents": "SensorScale[$1]" },
		{"trigger": "SensorSubType", "contents": "SensorSubType[$1]" },
		{"trigger": "SensorType", "contents": "SensorType[$1]" },
		{"trigger": "SensorValue", "contents": "SensorValue()" },
		{"trigger": "SensorValue", "contents": "SensorValue[$1]" },
		{"trigger": "getI2CSensorData", "contents": "getI2CSensorData(${1:nSensorIndex,nNumbOfBytes,nBuffer})" },
		{"trigger": "readI2CReply", "contents": "readI2CReply(${1:nPort,replyBytes,nBytesToRead});" },
		{"trigger": "readI2CReply", "contents": "readI2CReply(${1:nPort,pReplyBytes,nBytesToRead});" },
		{"trigger": "sendI2CMsg", "contents": "sendI2CMsg(${1:nPort,pSendMsg,nReplySize});" },
		{"trigger": "sendI2CMsg", "contents": "sendI2CMsg(${1:nPort,sendMsg,nReplySize});" },
		{"trigger": "bI2CCheckACKs", "contents": "bI2CCheckACKs" },
		{"trigger": "nI2CBytesReady", "contents": "nI2CBytesReady[$1]" },
		{"trigger": "nI2CRetries", "contents": "nI2CRetries" },
		{"trigger": "nI2CStatus", "contents": "nI2CStatus[$1]" },
		{"trigger": "readI2CReply", "contents": "readI2CReply(${1:replyBytes,nBytesToRead})" },
		{"trigger": "sendI2CMsg", "contents": "sendI2CMsg(${1:sendMsg,nReplySize})" },
		{"trigger": "bXmitComplete", "contents": "bXmitComplete(${1:nPort})" },
		{"trigger": "configureSerialPort", "contents": "configureSerialPort(${1:nPort,nMode});" },
		{"trigger": "getChar", "contents": "getChar(${1:nPort})" },
		{"trigger": "sendChar", "contents": "sendChar(${1:nPort,nChar});" },
		{"trigger": "setBaudRate", "contents": "setBaudRate(${1:nPort,nBaudRate});" },
		{"trigger": "getUartConfig", "contents": "getUartConfig(${1:nPort});" },
		{"trigger": "kNumbOfServos", "contents": "kNumbOfServos" },
		{"trigger": "muxUpdateInterval", "contents": "muxUpdateInterval" },
		{"trigger": "servoChangeRate", "contents": "servoChangeRate[$1]" },
		{"trigger": "servoMaxPos", "contents": "servoMaxPos[$1]" },
		{"trigger": "servoMinPos", "contents": "servoMinPos[$1]" },
		{"trigger": "servoTarget", "contents": "servoTarget[$1]" },
		{"trigger": "ServoType", "contents": "ServoType[$1]" },
		{"trigger": "ServoValue", "contents": "ServoValue[$1]" },
		{"trigger": "servo", "contents": "servo[$1]" },
		{"trigger": "bSystemLeaveServosEnabledOnProgramStop", "contents": "bSystemLeaveServosEnabledOnProgramStop" },
		{"trigger": "ClearSounds", "contents": "ClearSounds();" },
		{"trigger": "MuteSound", "contents": "MuteSound()" },
		{"trigger": "PlayImmediateTone", "contents": "PlayImmediateTone(${1:frequency,durationIn10MsecTicks});" },
		{"trigger": "PlaySound", "contents": "PlaySound(${1:sound});" },
		{"trigger": "PlaySoundFile", "contents": "PlaySoundFile(${1:sFileName});" },
		{"trigger": "PlayTone", "contents": "PlayTone(${1:frequency,durationIn10MsecTicks});" },
		{"trigger": "UnmuteSound", "contents": "UnmuteSound()" },
		{"trigger": "bHasSoundDriver", "contents": "bHasSoundDriver" },
		{"trigger": "bIFISoundTicks", "contents": "bIFISoundTicks" },
		{"trigger": "bPlaySounds", "contents": "bPlaySounds" },
		{"trigger": "bSoundActive", "contents": "bSoundActive" },
		{"trigger": "bSoundQueueAvailable", "contents": "bSoundQueueAvailable" },
		{"trigger": "kMaxVolumeLevel", "contents": "kMaxVolumeLevel" },
		{"trigger": "nVolume", "contents": "nVolume" },
		{"trigger": "snprintf", "contents": "snprintf(${1:ppDest,nDestLength,sFormatString})" },
		{"trigger": "snprintf", "contents": "snprintf(${1:ppDest,nDestLength,sFormatString,...});" },
		{"trigger": "snprintf", "contents": "snprintf(${1:ppDest,nDestLength,pzFormatString,...});" },
		{"trigger": "sprintf", "contents": "sprintf(${1:pDest,sFmtSpec,...})" },
		{"trigger": "sprintf", "contents": "sprintf(${1:ppDest,sFormatString,...})" },
		{"trigger": "sprintf", "contents": "sprintf(${1:sString,sFormatString})" },
		{"trigger": "sprintf", "contents": "sprintf(${1:sString,sFormatString,...});" },
		{"trigger": "sprintf", "contents": "sprintf(${1:sDest,pzFormatString,...});" },
		{"trigger": "sprintf", "contents": "sprintf(${1:pzCharsString,pzFormatString,...});" },
		{"trigger": "sscanf", "contents": "sscanf(${1:sSource,sFormatString});"},
		{"trigger": "sscanf", "contents": "sscanf(${1:sSource,sFormatString,...});" },
		{"trigger": "sscanf", "contents": "sscanf(${1:pzSource,pzFormatString,...});" },
		{"trigger": "strcat", "contents": "strcat(${1:pToBuffer,pFromBuffer});" },
		{"trigger": "strcat", "contents": "strcat(${1:sToString,pFromBuffer});" },
		{"trigger": "strcatSingleChar", "contents": "strcatSingleChar(${1:pToBuffer,cSingleChar});" },
		{"trigger": "strcmp", "contents": "strcmp(${1:pString1,pString2})" },
		{"trigger": "strcpy", "contents": "strcpy(${1:pToBuffer,pFromBuffer});" },
		{"trigger": "strIndex", "contents": "strIndex(${1:sString,nIndex})" },
		{"trigger": "StringDelete", "contents": "StringDelete(${1:sDest,nIndex,nSize});" },
		{"trigger": "StringFind", "contents": "StringFind(${1:sSrce,sSearch});" },
		{"trigger": "StringFind", "contents": "StringFind(${1:sSrce,sFindString});" },
		{"trigger": "StringFind", "contents": "StringFind(${1:sSrce,pzFindString});" },
		{"trigger": "StringFormat", "contents": "StringFormat(${1:sDest,sFormatString});" },
		{"trigger": "StringFormat", "contents": "StringFormat(${1:sDest,sFormatString,...});" },
		{"trigger": "StringFormat", "contents": "StringFormat(${1:sDest,pzFormatString,...});" },
		{"trigger": "StringFromChars", "contents": "StringFromChars(${1:sToString,sFromChars});" },
		{"trigger": "StringFromChars", "contents": "StringFromChars(${1:sToString,pFromChars});" },
		{"trigger": "StringGetAddress", "contents": "StringGetAddress(${1:sSrce});" },
		{"trigger": "StringGetChar", "contents": "StringGetChar(${1:sSrce,nIndex});" },
		{"trigger": "StringSize", "contents": "StringSize(${1:sString,nSize});" },
		{"trigger": "strlen", "contents": "strlen(${1:sString});" },
		{"trigger": "strlen", "contents": "strlen(${1:pString});" },
		{"trigger": "strncat", "contents": "strncat(${1:pToBuffer,pFromBuffer,nMaxBufferSize});" },
		{"trigger": "strncatSingleChar", "contents": "strncatSingleChar(${1:pToBuffer,cSingleChar,nMaxBufferSize});" },
		{"trigger": "strncmp", "contents": "strncmp(${1:pString1,pString2,nMaxBufferSize})" },
		{"trigger": "strncpy", "contents": "strncpy(${1:pToBuffer,pFromBuffer,nMaxBufferSize});" },
		{"trigger": "strTrim", "contents": "strTrim(${1:pString});" },
		{"trigger": "strTrim", "contents": "strTrim(${1:sString});" },
		{"trigger": "strTrimN", "contents": "strTrimN(${1:pString,nMaxBufferSize});" },
		{"trigger": "reverseChars", "contents": "reverseChars(${1:sSrce});" },
		{"trigger": "reverseChars", "contents": "reverseChars(${1:pSrce});" },
		{"trigger": "abortTimeslice", "contents": "abortTimeslice();" },
		{"trigger": "EndTimeSlice", "contents": "EndTimeSlice();" },
		{"trigger": "getFileName", "contents": "getFileName(${1:nFileIndex,sFileName})" },
		{"trigger": "getFileType", "contents": "getFileType(${1:nFileIndex})" },
		{"trigger": "getIdleTimeProgramIndex", "contents": "getIdleTimeProgramIndex()" },
		{"trigger": "getStartupProgramIndex", "contents": "getStartupProgramIndex()" },
		{"trigger": "getTaskPriority", "contents": "getTaskPriority(${1:TaskID})" },
		{"trigger": "getTaskState", "contents": "getTaskState(${1:TaskID})" },
		{"trigger": "hogCPU", "contents": "hogCPU();" },
		{"trigger": "releaseCPU", "contents": "releaseCPU();" },
		{"trigger": "resumeTask", "contents": "resumeTask(${1:TaskID});" },
		{"trigger": "setTaskPriority", "contents": "setTaskPriority(${1:TaskID,nTaskPriority});" },
		{"trigger": "StartTask", "contents": "StartTask(${1:TaskID});" },
		{"trigger": "StartTask", "contents": "StartTask(${1:TaskID,nTaskPriority});" },
		{"trigger": "StopAllTasks", "contents": "StopAllTasks();" },
		{"trigger": "StopTask", "contents": "StopTask(${1:TaskID});" },
		{"trigger": "suspendTask", "contents": "suspendTask(${1:TaskID});" },
		{"trigger": "bClearVariablesOnPgmStart", "contents": "bClearVariablesOnPgmStart" },
		{"trigger": "kDefaultPriority", "contents": "kDefaultPriority" },
		{"trigger": "kDefaultTaskPriority", "contents": "kDefaultTaskPriority" },
		{"trigger": "kHighPriority", "contents": "kHighPriority" },
		{"trigger": "kLowPriority", "contents": "kLowPriority" },
		{"trigger": "nCurrentTask", "contents": "nCurrentTask" },
		{"trigger": "nNxtExitClicks", "contents": "nNxtExitClicks" },
		{"trigger": "nOpcodesPerTimeslice", "contents": "nOpcodesPerTimeslice" },
		{"trigger": "nRemoteButton", "contents": "nRemoteButton" },
		{"trigger": "nSchedulePriority", "contents": "nSchedulePriority" },
		{"trigger": "programNumber", "contents": "programNumber" },
		{"trigger": "pStartOfFlashFileHdr", "contents": "pStartOfFlashFileHdr" },
		{"trigger": "ClearTimer", "contents": "ClearTimer(${1:theTimer});" },
		{"trigger": "setClockTime", "contents": "setClockTime(${1:hours,minutes})" },
		{"trigger": "wait10Msec", "contents": "wait10Msec(${1:nTenMSec});" },
		{"trigger": "wait1Msec", "contents": "wait1Msec(${1:nMSec});" },
		{"trigger": "Sleep", "contents": "Sleep(${1:nMSec});" },
		{"trigger": "noOp", "contents": "noOp();" },
		{"trigger": "nClockMinutes", "contents": "nClockMinutes" },
		{"trigger": "nPgmTime", "contents": "nPgmTime" },
		{"trigger": "nSysTime", "contents": "nSysTime" },
		{"trigger": "time100", "contents": "time100[$1]" },
		{"trigger": "time10", "contents": "time10[$1]" },
		{"trigger": "time1", "contents": "time1[$1]" }
	]
}
